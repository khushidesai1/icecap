{"version":3,"sources":["components/UploadButtons.js","components/Javadocs.js","components/FileDownloadComponent.js","components/SingleLines.js","components/MultiLines.js","components/Whitespaces.js","components/Indentations.js","components/RmJavadocs.js","components/StepperPage.js","components/PageHeader.js","components/MainInfoPage.js","components/TutorialPage.js","components/LongLines.js","components/LongMethods.js","components/EditorPage.js","App.js","serviceWorker.js","index.js"],"names":["UploadButtons","props","classes","makeStyles","theme","root","margin","spacing","input","display","button","backgroundColor","mColor","color","bColor","marginTop","marginRight","dropCard","width","height","paddingTop","paddingLeft","paddingRight","paddingBottom","dropCardBorder","border","borderColor","borderWidth","defaultCardBorder","listCard","padding","alignContent","icon","useStyles","className","Card","elevation","onClick","onDrop","onFileDropped","accept","getRootProps","getInputProps","isDragActive","isDragReject","isDragAccept","acceptedFiles","rejectedFiles","style","fontSize","whiteSpace","id","multiple","type","htmlFor","Button","variant","component","disableElevation","document","getElementById","onchange","event","fileList","target","files","Javadocs","this","classJavadoc","methodPattern","RegExp","classPattern","content","i","fileContent","javadocFound","lineNum","javadoc","lines","split","numLines","length","overrideFound","line","newline","lineTrim","trim","startsWith","endsWith","exec","validateJavadocComment","generateMethodJavadoc","validateClassJavadocComment","header","javadocComment","returnVal","containsReturn","paramNames","getParamList","javadocLower","toLowerCase","includes","contains","toUpperCase","classJavadocComment","params","countParameters","indentation","countIndentations","indent","comment","open","indexOf","close","paramString","substring","segments","names","paramSplit","push","count","spaceCount","c","charAt","CssTextField","withStyles","TextField","React","useState","defaultFileName","currentFileName","setCurrentFileName","lineHeight","onChange","e","newFilteredName","filename","otherPattern","replace","dotIndex","validateFilename","value","callbackFromParent","defaultValue","text","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","contentList","fileIndex","SingleLines","commentIndex","subString","MultiLines","toWrite","openReached","closeReached","oneLine","Whitespaces","wordPattern","noSpaceBeforeKeywords","noSpaceAfterKeywords","spaceBeforeChars","spaceBeforeKeywords","spaceAfterChars","spaceAfterKeywords","noSpaceBefore","noSpaceAfter","spaceBefore","spaceAfter","removeTrailingBlank","item","itemLen","changed","j","ind","numPotentialErrs","numItems","indices","allIndices","temp","checkJavaDocInterfere","trimRight","trimLeft","proper","getProperBefore","checkMult","checkMultiComment","partOfWord","getProperAfter","total","curr","strBefore","strAfter","strAfter2","strBefore2","checkMultiStar","checkMultiSlash","Indentations","levels","lineToWrite","l","generateIndentation","elseIndentMark","isIndentMark","isEndIndentMark","RmJavadocs","VerticalLinearStepper","backButton","tColor","actionsContainer","marginBottom","resetContainer","step","fontFamily","StyledToggle","selected","label","ToggleButton","iconTheme","createMuiTheme","MuiStepIcon","active","disabled","activeStep","setActiveStep","steps","operationOpen","setOperationOpen","fileOpen","setFileOpen","acceptedOpen","setAcceptedOpen","rejectedOpen","setRejectedOpen","javaSelected","setJava","singleSelected","setSingle","multiSelected","setMulti","indentSelected","setIndent","whiteSelected","setWhite","rmJavaSelected","setRmJavaSelected","intialAcceptedFiles","setIntialAcceptedFiles","intialRejectedFiles","setIntialRejectedFiles","uploadedFiles","setUploadedFiles","fixedFileContents","setFixedFileContents","newFileNames","setNewFileNames","fileCallback","oldName","newName","map","handleButton","handleNext","handleRun","handleDownloadAll","prevActiveStep","handleBack","handleReset","fileAccessMethod","inputFile","Promise","resolve","reader","FileReader","onloadend","result","readAsText","java","single","multi","white","rmJava","then","fileText","fixedText","removeJavadocs","addJavadocs","removeSingleLines","removeMultiLines","fixWhitespaces","fixIndentations","performAll","JavadocToggle","SingleToggle","MultiToggle","WhitespaceToggle","RmJavadocsToggle","onFileDrop","Array","from","nameList","file","name","stepThree","Typography","componentList","FileDownloadComponent","getFileDownloadComponents","getStepContent","Stepper","orientation","index","Step","key","ThemeProvider","StepLabel","StepContent","Collapse","in","Alert","list","fullString","getFileList","severity","timeout","StepperPage","window","screen","paper","mainStyles","Paper","PageHeader","darkToggle","setDarkToggle","settingsOpen","setSettingsOpen","editorOpen","setEditorOpen","settingsAnchorRef","useRef","editorAnchorRef","switchStyles","useN02SwitchStyles","flexGrow","bar","hColor","menuText","fontWeight","title","menuClasses","anchorOrigin","vertical","horizontal","transformOrigin","switch","appBarStyles","handleDarkToggle","checked","darkModeCallback","goToStatic","screenChangeCallback","goToLive","handleSettingsClose","current","handleEditorClose","prevSettingsOpen","useEffect","focus","prevEditorOpen","AppBar","position","Toolbar","ref","Popper","aria-haspopup","aria-controls","undefined","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","iColor","borderRadius","Switch","href","MainInfoPage","mainText","flexWrap","marginLeft","subMainText","subText","button2","marginBotton","buttonDiv","flexDirection","flex","logoStyle","HorizontalStepper","stepperRoot","instructions","pColor","QontoConnector","alternativeLabel","top","left","right","completed","borderTopWidth","StepConnector","useQontoStepIconStyles","alignItems","circle","zIndex","QontoStepIcon","clsx","connector","StepIconComponent","stepLabel","stepIndex","stepPaper","AlertTitle","headingText","normalText","code","step4Paper","subHeadingText","TutorialPage","LongLines","LongMethods","methodStart","methodLength","exceededLength","netBrace","getLineNetBrace","net","EditorPage","editorDiv","operationCard","clearButton","smallHeading","disableButton","linesCard","myColor","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","textTheme","palette","primary","formControlLabelStyles","bannerCheckboxStylesHook","useFormControlLabel","neonStyles","useCheckbox","useNeonCheckboxStyles","animatedComponents","makeAnimated","itemClasses","inputBaseStyles","borderedTextFieldStylesHook","useInputBase","inputText","setInputText","fileTextList","setFileTextList","fileName","setFileName","newFileName","setNewFileName","setIndex","isEditing","setIsEditing","chosenOperations","setChosenOperations","firstDisplay","setFirstDisplay","secondDisplay","setSecondDisplay","openField","setOpenField","setFixedText","openDiff","setOpenDiff","diffVal","setDiffVal","markLongLinesToggle","setMarkLongLinesToggle","markLongMethodsToggle","setMarkLongMethodsToggle","handleTextChange","newText","oldText","filetext","getFirstDisplayText","handleChange","handleDrop","texts","handleSecondTextChange","handleDiffClose","GridList","cellHeight","cellWidth","cols","fileOptions","options","getOptions","isSearchable","placeholder","colors","primary25","neutral80","neutral90","getSelector","minHeight","isClearable","isMulti","closeMenuOnSelect","action","dangerLight","danger","neutral10","FormControlLabel","control","Checkbox","alignSelf","disableRipple","checkedIcon","op","markLongLines","markLongMethods","InputProps","disableUnderline","Dialog","maxWidth","fullWidth","PaperProps","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","newVal","setOptions","useWorker","mode","eTheme","DialogActions","stopPropagation","switchBase","track","MainApp","backColor","setBackColor","textColor","setTextColor","middleColor","setMiddleColor","editorTheme","setEditorTheme","mainColor","setMainColor","tutorialColor","setTutorialColor","logo","setLogo","diffHighlight","setDiffHighlight","iconHighlight","setIconHighlight","screenNum","setScreenNum","changeScreen","sNum","currentScreen","isDarkMode","getScreen","App","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8c43e36e.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dropzone from 'react-dropzone';\nimport Card from '@material-ui/core/Card';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport './Component.css';\nimport { Button } from '@material-ui/core';\n\n/**\n * The upload button component that contains both the upload button\n * and the file dropzone. The component collects and returns back \n * to the parent the accepted and rejected files.\n * @param {Object} props the props used to pull information from the parent.\n */\nexport default function UploadButtons(props) {\n\n  /**\n   * Styles used to customize the upload button and \n   * the file dropzone for upload.\n   */\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    input: {\n      display: 'none',\n    },\n    button: {\n      backgroundColor: props.mColor,\n      color: props.bColor,\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      '&:hover': {\n        backgroundColor: '#537b86',\n      },\n    },\n    dropCard: {\n      width: '790px',\n      height: '160px',\n      paddingTop: '20px',\n      paddingLeft: '20px',\n      paddingRight: '15px',\n      paddingBottom: '15px',\n    },\n    dropCardBorder: {\n      border: 'dashed',\n      borderColor: '#6493a1',\n      borderWidth: '2px',\n      width: '780px',\n      height: '150px',\n    },\n    defaultCardBorder: {\n      border: 'dashed',\n      borderColor: '#D3D3D3',\n      borderWidth: '2px',\n      width: '780px',\n      height: '150px',\n    },\n    listCard: {\n      color: '#154854',\n      width: '200px',\n      backgroundColor: '#6493a1',\n      padding: '10px',\n      alignContent: 'center',\n    },\n    icon: {\n      color: '#6493a1'\n    }\n  }));\n  const classes = useStyles();\n\n  /**\n   * The components that make up the Upload Button.\n   */\n  return (\n    <div className={classes.root}>\n      <Card elevation={0} className={classes.dropCard}>\n        <Dropzone onClick={null} className={classes.dropCard} onDrop={props.onFileDropped} accept='.java'>\n          {({getRootProps, getInputProps, isDragActive, isDragReject, isDragAccept, acceptedFiles, rejectedFiles}) => (\n            <section style={{ width: 780, height: 150 }}>\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                {!isDragActive ? \n                  <div className={classes.defaultCardBorder}>\n                    <div className='Dropzone'>\n                    <p></p>\n                    <CloudUploadIcon className={classes.icon} fontSize='large'></CloudUploadIcon>\n                    <p style={{ color: '#6493a1', whiteSpace: 'break-spaces' }}>Choose files or drop them here</p>\n                    <p></p>\n                    </div>\n                  </div>:\n                  <div className={classes.dropCardBorder}>\n                    <div className='Dropzone'>\n                    <p></p>\n                    <CloudUploadIcon className={classes.icon} fontSize='large'></CloudUploadIcon>\n                    <p style={{ color: '#6493a1', whiteSpace: 'break-spaces' }}>Drop it here!</p>\n                    <p></p>\n                    </div>\n                  </div>\n                }\n              </div>\n            </section>\n          )}\n        </Dropzone>\n      </Card>\n      <p>\n\n      </p>\n      <div>\n      <input\n        accept=\".java\"\n        className={classes.input}\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button \n        variant=\"contained\" \n        component=\"span\"\n        className={classes.button}\n        disableElevation\n        onClick={() => {\n          document.getElementById('contained-button-file').onchange = function(event) {\n            var fileList = event.target.files;\n            props.onFileDropped(fileList, []);\n         }\n        }}\n        >\n          Upload Files\n        </Button>\n      </label>\n    </div>\n    </div>\n  );\n}\n","/**\n * Javadocs class that adds java doc comment templates\n * to the provided java code.\n */\nexport default class Javadocs {\n\n    /**\n     * Default constructor for the Javadocs class.\n     * Contains information about javadoc class and method\n     * formats, and method and class patterns.\n     */\n    constructor() {\n        this.classJavadoc =\n            \"/**\\n\" + \n            \" * {CLASS DESCRIPTION}\\n\" + \n            \" * @author {YOUR NAME}\\n\" + \n            \" */\\n\";\n        this.methodPattern = new RegExp(\n            \"(\\\\p{Space})*(public |protected |private )?\" +\n            \"(static )?\" +\n            \"(void |[\\\\w\\\\W]+ )\" +\n            \"([a-zA-Z0-9]+)\" +\n            \"\\\\(\" +\n            \"(([\\\\w\\\\W]+ [a-zA-Z0-9]+)|\" +\n            \"(([\\\\w\\\\W]+ [a-zA-Z0-9]+, )+[\\\\w\\\\W]+ [a-zA-Z0-9]+))?\" + \n            \"\\\\) ?\\\\{\");\n        this.classPattern = new RegExp(\n            \"(\\\\p{Space})*(public |protected |private )?\" +\n            \"(static )?\" + \n            \"(class )\" +\n            \"(extends |implements )?\" +\n            \"([a-zA-Z0-9]+) ?\\\\{\"\n        );\n\n    }\n\n    /**\n     * Adds javadoc comment templates before each method and \n     * class header. Highlights incorrect javadoc comments\n     * with a header in order to notify the user to change\n     * the javadoc format.\n     * @param {String} content the content of the original file.\n     */\n    addJavadocs(content) {\n        var fileContent = \"\";\n        var javadocFound = false;\n        var lineNum = 1;\n        var javadoc = \"\";\n        var lines = content.split(\"\\n\");\n        var numLines = lines.length;\n        var overrideFound = false;\n        var i;\n        for (i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var newline = \"\";\n            if (lineNum < numLines) {\n                newline = \"\\n\";\n            }\n            var lineTrim = line.trim();\n            if (line.trim() === \"@Override\") {\n                overrideFound = true;\n                fileContent += line + newline;\n            } else if (!lineTrim.startsWith(\"/**\") && lineTrim.startsWith(\"/*\")) {\n                fileContent += line + newline;\n            } else if (lineTrim.startsWith(\"/**\") && lineTrim.endsWith(\"*/\")) {\n                javadocFound = false;\n                javadoc += line + newline;\n            } else if (lineTrim.startsWith(\"/**\")) {\n                javadocFound = true;\n                javadoc += line + newline;\n            } else if (lineTrim.endsWith(\"*/\")) {\n                if (javadocFound) {\n                    javadocFound = false;\n                    javadoc += line + newline;\n                } else {\n                    fileContent += line + newline;\n                }\n            } else if (javadocFound) {\n                javadoc += line + newline;\n            } else if (line === \"\" || lineTrim === \"\") {\n                fileContent += line + newline;\n            } else if (this.methodPattern.exec(lineTrim)) {\n                if (!overrideFound) {\n                    if (javadoc !== \"\") {\n                        if (this.validateJavadocComment(line, javadoc)) {\n                            fileContent += javadoc;\n                        } else {\n                            fileContent += \"------- INCORRECT JAVADOC FORMAT -------\\n\";\n                            fileContent += javadoc;\n                            fileContent += \"----------------------------------------\\n\";\n                        }\n                        fileContent += line + newline;\n                        javadoc = \"\";\n                    } else {\n                        var comment = this.generateMethodJavadoc(line);\n                        fileContent += comment;\n                        fileContent += line + newline;\n                    }\n                } else {\n                    fileContent += line + newline;\n                }\n            } else if (this.classPattern.exec(line)) {\n                if (javadoc !== \"\") {\n                    if (this.validateClassJavadocComment(javadoc)) {\n                        fileContent += javadoc;\n                    } else {\n                        fileContent += \"------- ADD @AUTHOR TAG TO JAVADOC -------\\n\";\n                        fileContent += javadoc;\n                        fileContent += \"----------------------------------------\\n\";\n                    }\n                    fileContent += line + newline;\n                    javadoc = \"\";\n                } else {\n                    fileContent += this.classJavadoc;\n                    fileContent += line + newline;\n                }\n            } else {\n                if (javadoc !== \"\") {\n                    fileContent += javadoc + newline;\n                }\n                fileContent += line + newline;\n                javadoc = \"\";\n            }\n            lineNum++;\n        }\n        return fileContent;\n    }\n\n    /**\n     * Returns true if the provided javadoc comment and \n     * the header are of correct format according \n     * to the style guide and false otherwise.\n     * @param {String} header the method header.\n     * @param {String} javadocComment the provided javadoc comment.\n     */\n    validateJavadocComment(header, javadocComment) {\n        var returnVal = this.containsReturn(header);\n        var paramNames = this.getParamList(header);\n        var javadocLower = javadocComment.toLowerCase();\n        if (returnVal) {\n            if (!(javadocLower.includes(\"@return\") || javadocLower.includes(\"returns\")\n                || javadocLower.includes(\"returning\") || javadocLower.includes(\"return\"))) {\n                return false;\n            }\n        }\n        var i;\n        for (i = 0; i < paramNames; i++) {\n            if (!(javadocComment.contains(\"@param \" + paramNames[i]) || javadocComment.contains(paramNames[i].toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns true if the provided class javadoc comment\n     * is of correct format according to\n     * the style guide and false otherwise.\n     * @param {String} classJavadocComment the provided class javadoc comment.\n     */\n    validateClassJavadocComment(classJavadocComment) {\n        return classJavadocComment.includes(\"@author\");\n    }\n\n    /**\n     * Returns a javadoc template for a method header provided.\n     * @param {String} header the method header.\n     */\n    generateMethodJavadoc(header) {\n        var params = this.countParameters(header);\n        var returnVal = this.containsReturn(header);\n        var indentation = this.countIndentations(header);\n        var paramNames = this.getParamList(header);\n        var indent = \"\";\n        var i;\n        for (i = 0; i < indentation; i++) {\n            indent += \"\\t\";\n        }\n        var comment = indent + \"/**\\n\" + indent + \" * {METHOD DESCRIPTION}\\n\";\n        for (i = 0; i < params; i++) {\n            comment = comment + indent + \" * @param \" + paramNames[i] + \" {PARAM DESCRIPTION}\\n\";\n        }\n        if (returnVal) {\n            comment = comment + indent + \" * @return {RETURN DESCRIPTION}\\n\";\n        }\n        comment = comment + indent + \" */\\n\";\n        return comment;\n    }\n\n    /**\n     * Returns the number of parameters in the provided method \n     * header.\n     * @param {String} header the method header. \n     */\n    countParameters(header) {\n        return this.getParamList(header).length;\n    }\n\n    /**\n     * Returns an array of parameter names that are \n     * contained within the method header provided.\n     * @param {String} header the method header.\n     */\n    getParamList(header) {\n        var open = header.indexOf('(');\n        var close = header.indexOf(')');\n        var paramString = header.substring(open + 1, close);\n        if (paramString.trim() === \"\") {\n            return [];\n        } else {\n            var segments = paramString.split(\",\");\n            var names = [];\n            var i;\n            for (i in segments) {\n                var paramSplit = segments[i].split(\" \");\n                names.push(paramSplit[paramSplit.length - 1]);\n            }\n            return names;\n        }\n    }\n\n    /**\n     * Returns true if the method header contains a return\n     * type other than void and false otherwise.\n     * @param {String} header the method header.\n     */\n    containsReturn(header) {\n        return !header.includes(\"void\");\n    }\n\n    /**\n     * Returns the number of indentations before the method\n     * header provided.\n     * @param {String} header the method header. \n     */\n    countIndentations(header) {\n        var count = 0;\n        var spaceCount = 0;\n        var i = 0;\n        for (i = 0; i < header.length; i++) {\n            var c = header.charAt(i);\n            if (c !== '\\t' && c !== ' ') {\n                break;\n            }\n            if (c === '\\t') {\n                count += 1;\n            }\n            if (c === ' ') {\n                spaceCount++;\n            }\n        }\n        return count + (spaceCount / 4);\n    }\n}\n","import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\n/**\n * Styled text field to include within the FileDownloadComponent.\n */\nconst CssTextField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: '#6493a1',\n        },\n        '& label': {\n            color: '#6493a1',\n        },\n        borderColor: '6493a1',\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderColor: '#6493a1',\n              color: '#6493a1',\n            },\n            '&:hover fieldset': {\n              borderColor: '#6493a1',\n              color: '#6493a1',\n            },\n            '&.Mui-focused fieldset': {\n              borderColor: '#6493a1',\n              color: '#6493a1',\n            },\n            color: '#6493a1',\n        },\n    },\n\n}) (TextField);\n/**\n * The styles that are used to customize other components.\n */\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: '#6493a1',\n        '&:hover': {\n          backgroundColor: '#537b86',\n        },\n        color: 'white',\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport default function(props) {\n\n    /**\n     * The styles and states of the FileDownloadComponent that\n     * needs to be kept track of.\n     */\n    const classes = useStyles();\n    const [currentFileName, setCurrentFileName] = React.useState(props.defaultFileName);\n\n    /**\n     * Helper function that takes in a filename\n     * and validates and cleans it, returning a valid\n     * filename based on the input.\n     * @param {String} filename the inputted filename.\n     */\n    function validateFilename(filename) {\n        var otherPattern = new RegExp(\"\\\\W\");\n        if (filename.trim() === \"\" || otherPattern.exec(filename)) {\n            return currentFileName;\n        } else {\n            filename = filename.replace(\" \", \"_\");\n            if (!filename.includes(\".\") && !filename.includes(\".java\")) {\n                return filename + \".java\";\n            } else if (filename.includes(\".\")) {\n                var dotIndex = filename.indexOf(\".\", 0);\n                return filename.substring(0, dotIndex) + \".java\";\n            } else {\n                return filename;\n            }\n        }\n    }\n\n    /**\n     * The handler method that handles a change to\n     * the text field.\n     * @param {Object} e the event object that the text field returns. \n     */\n    function handleChange(e) {\n        var newUnfilteredName = e.target.value;\n        var newFilteredName = validateFilename(newUnfilteredName);\n        props.callbackFromParent(currentFileName, newFilteredName);\n        setCurrentFileName(newFilteredName);\n    }\n\n    /**\n     * Helper method that performs a download when called\n     * using the filename and the content passed in.\n     * @param {String} filename the name of the file.\n     * @param {String} text the content that the file will contain once downloaded.\n     */\n    function download(filename, text) {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:.java;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n      \n        element.style.display = 'none';\n        document.body.appendChild(element);\n      \n        element.click();\n      \n        document.body.removeChild(element);\n    }\n\n    /**\n     * The handler method that performs the download using the \n     * appropriate variables.\n     */\n    function doDownload() {\n        download(currentFileName, props.contentList[props.fileIndex]);    \n    }\n\n    /**\n     * The components that make up the FileDownloadComponent.\n     */\n    return (\n        <div className='DownloadTextField' style={{ whiteSpace: 'break-spaces', lineHeight: 4.5 }}>\n            <CssTextField \n            onChange={handleChange}\n            id=\"outlined-required\"\n            defaultValue={props.defaultFileName}\n            variant=\"outlined\">\n            </CssTextField>\n            <span>        </span> \n            <Button\n            onClick={doDownload}\n            variant='contained'\n            className={classes.button}\n            disableElevation\n            >\n                Download File\n            </Button>\n        </div>\n    );\n}","/**\n * The SingleLines class that removes single line\n * comments from the java code provided.\n */\nexport default class SingleLines {\n    \n    /**\n     * Default constructor of the single lines class.\n     */\n    constructor() {\n    }\n\n    /**\n     * Method that removes single line comments from the java code\n     * provided and returns the new fixed file content.\n     * @param {String} content the content of the original file.\n     */\n    removeSingleLines(content) {\n        var fileContent = \"\";\n        var lines = content.split(\"\\n\");\n        var numLines = lines.length;\n        var lineNum = 1;\n        var i;\n        for (i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var newline = \"\";\n            if (lineNum < numLines) {\n                newline = \"\\n\";\n            } else {\n                newline = \"\";\n            }\n            if (line.includes(\"//\")) {\n                var commentIndex = line.indexOf(\"//\", 0);\n                if (commentIndex !== 0) {\n                    var subString = line.substring(0, commentIndex);\n                    if (subString.trim() !== \"\") {\n                        fileContent += subString + newline;\n                    }\n                }\n            } else {\n                fileContent += line + newline;\n            }\n            lineNum++;\n        }\n        return fileContent;\n    }\n}\n","/**\n * MultiLines class that removes multi line comments\n * from the provided java code.\n */\n export default class MultiLines {\n\n    /**\n     * Default constructor for the MultiLines\n     * class.\n     */\n    constructor() {\n    }\n\n    /**\n     * Takes in the file content and removes all the multi line comments\n     * from the provided file content, returning the fixed file content.\n     * @param {String} content the content of the original file.\n     */\n    removeMultiLines(content) {\n        var fileContent = \"\";\n        var lines = content.split(\"\\n\");\n        var numLines = lines.length;\n        var lineNum = 1;\n        var i;\n        var toWrite = \"\";\n        var openReached = false;\n        var closeReached = false;\n        var oneLine = false;\n        for (i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var newline = \"\";\n            if (lineNum < numLines) {\n                newline = \"\\n\";\n            } else {\n                newline = \"\";\n            }\n            if (line.includes(\"/*\") && line.includes(\"*/\")) {\n                if (line.indexOf(\"/**\") !== line.indexOf(\"/*\")) {\n                    openReached = false;\n                    closeReached = false;\n                    oneLine = true;\n                }\n            } else if (line.includes(\"/*\")) {\n                if (line.indexOf(\"/**\") !== line.indexOf(\"/*\")) {\n                    openReached = true;\n                    closeReached = false;\n                }\n            } else if (line.includes(\"*/\")) {\n                if (openReached) {\n                    openReached = false;\n                    closeReached = true;\n                }\n            }\n            if (line.trim() !== \"\") {\n                toWrite = line;\n                var open = toWrite.indexOf(\"/*\");\n                var close = toWrite.indexOf(\"*/\") + 2;\n                if (oneLine) {\n                    toWrite = line.replace(line.substring(open, close), \"\");\n                } else if (openReached && !closeReached) {\n                    toWrite = \"\";\n                } else if (closeReached) {\n                    toWrite = line.substring(close);\n                    openReached = false;\n                    closeReached = false;\n                }\n                if (toWrite.trim() !== \"\") {\n                    fileContent += toWrite + newline;\n                }\n            } else {\n                fileContent += line + newline;\n            }\n            oneLine = false; \n        }\n        return fileContent;\n    }\n}","/**\n * The Whitespace class that fixes incorrect\n * or missing whitespaces in the java code.\n */\nexport default class Whitespaces {\n  /**\n   * Default constructor for the Whitespaces class.\n   */\n  constructor() {\n    this.wordPattern = new RegExp(\"^[A-Za-z]*$\");\n  }\n\n  /**\n   * Applies all the whitespaces fixing helper methods \n   * to the appropriate items and the file content and returns\n   * the new fixed file content.\n   * @param {String} content the content of the original file.\n   */\n  fixWhitespaces(content) {\n    var fileContent = content;\n    var noSpaceBeforeKeywords = [\"++\", \"--\", \";\", \")\"];\n    var noSpaceAfterKeywords = [\"(\", \"!\", \"++\", \"--\"];\n    var spaceBeforeChars = [\"&&\", \"||\", \"{\", \"*\", \"+\", \"-\", \"/\", \"=\", \"==\", \"+=\",\"-=\", \"?\", \":\"];\n    var spaceBeforeKeywords = [\"catch\", \"do\", \"else\", \"finally\", \"synchronized\"];\n    var spaceAfterChars = [\"&&\", \"||\", \";\", \",\", \"+\", \"/\", \"-\", \"*\", \"=\", \"+=\", \"==\", \"-=\", \"?\", \":\"];\n    var spaceAfterKeywords = [\"assert\", \"catch\", \"do\", \"else\", \"finally\", \n    \"for\", \"if\", \"synchronized\", \"try\", \"while\"];\n    var i;\n    for (i = 0; i < noSpaceBeforeKeywords.length; i++) {\n      fileContent = this.noSpaceBefore(fileContent.split(\"\\n\"), noSpaceBeforeKeywords[i]);\n    }\n    for (i = 0; i < noSpaceAfterKeywords.length; i++) {\n      fileContent = this.noSpaceAfter(fileContent.split(\"\\n\"), noSpaceAfterKeywords[i]);\n    }\n    for (i = 0; i < spaceBeforeChars.length; i++) {\n      fileContent = this.spaceBefore(fileContent.split(\"\\n\"), spaceBeforeChars[i]);\n    }\n    for (i = 0; i < spaceBeforeKeywords.length; i++) {\n      fileContent = this.spaceBefore(fileContent.split(\"\\n\"), spaceBeforeKeywords[i]);\n    }\n    for (i = 0; i < spaceAfterChars.length; i++) {\n      fileContent = this.spaceAfter(fileContent.split(\"\\n\"), spaceAfterChars[i]);\n    }\n    for (i = 0; i < spaceAfterKeywords.length; i++) {\n      fileContent = this.spaceAfter(fileContent.split(\"\\n\"), spaceAfterKeywords[i]);\n    }\n    \n    fileContent = this.removeTrailingBlank(fileContent.split(\"\\n\"));;\n    return fileContent;\n  }\n\n  /**\n   * Method that ensures there is no space before the item provided\n   * in the lines provided.\n   * @param {Array} lines the array of the lines of code.\n   * @param {String} item the item to look for in the code.\n   */\n  noSpaceBefore(lines, item) {\n      var fileContent = \"\";\n      var toWrite = \"\";\n      var itemLen = item.length;\n      var changed = false;\n      var numLines = lines.length;\n      var lineNum = 1;\n      var newline = \"\";\n      var i;\n      for (i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (lineNum < numLines) {\n          newline = \"\\n\";\n        } else {\n          newline = \"\";\n        }\n        if (line.includes(item)) {\n          var ind = line.indexOf(item);\n          var numPotentialErrs = this.numItems(line, item, itemLen);\n          var indices = this.allIndices(line, item, ind, itemLen);\n          var j;\n          for (j = 0; j < numPotentialErrs; j++) {\n            if (!this.checkJavaDocInterfere(line)) {\n              if (toWrite === \"\") {\n                if (line.charAt(indices[j] - 1) === ' ') {\n                  toWrite = line.substring(0, indices[j]).trimRight();\n                  toWrite += line.substring(indices[j]);\n                  indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                  changed = true;\n                }\n              } else {\n                var temp;\n                temp = toWrite.substring(indices[j]);\n                toWrite = toWrite.substring(0, indices[j]).trimRight();\n                toWrite += temp;\n                indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                changed = true;\n              }\n            }\n          }\n          if (toWrite !== \"\") {\n            fileContent += toWrite + newline;\n          }\n          toWrite = \"\";\n        }\n        if (!changed) {\n          fileContent += line + newline;\n        }\n        changed = false;\n        lineNum++;\n      }\n      return fileContent;\n  }\n\n  /**\n   * Method that ensures there is no space after the item provided\n   * in the lines provided.\n   * @param {Array} lines the array of the lines of code.\n   * @param {String} item the item to look for in the code.\n   */\n  noSpaceAfter(lines, item) {\n    var fileContent = \"\";\n    var toWrite = \"\";\n    var itemLen = item.length;\n    var changed = false;\n    var numLines = lines.length;\n    var lineNum = 1;\n    var newline = \"\";\n    var i;\n    for (i = 0; i < numLines; i++) {\n      var line = lines[i];\n      if (lineNum < numLines) {\n        newline = \"\\n\";\n      } else {\n        newline = \"\";\n      }\n      if (line.includes(item)) {\n        var ind = line.indexOf(item);\n        var numPotentialErrs = this.numItems(line, item, itemLen);\n        var indices = this.allIndices(line, item, ind, itemLen);\n        var j;\n        for (j = 0; j < numPotentialErrs; j++) {\n          if (!this.checkJavaDocInterfere(line)) {\n            if (toWrite === \"\") {\n              if (line.charAt(indices[j] + 1) ===  ' ') {\n                  toWrite = line.substring(0, indices[j] + itemLen);\n                  toWrite += line.substring(indices[j] + itemLen).trimLeft();\n                  indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                  changed = true;\n              }\n          } else {\n                var temp = toWrite.substring(indices[j] + itemLen).trimLeft();\n                toWrite = toWrite.substring(0, indices[j] + itemLen);\n                toWrite += temp;\n                indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                changed = true;\n            } \n          }\n        }\n        if (toWrite !== \"\") {\n          fileContent += toWrite + newline;\n        }\n        toWrite = \"\";\n      }\n      if (!changed) {\n        fileContent += line + newline;\n      }\n      changed = false;\n      lineNum++;\n    }\n    return fileContent;\n  }\n    \n  /**\n   * Method that ensures there is a single space before the item \n   * provided in the lines provided.\n   * @param {Array} lines the array of the lines of code.\n   * @param {String} item the item to look for in the code. \n   */\n  spaceBefore(lines, item) {\n    var fileContent = \"\";\n    var itemLen = item.length;\n    var toWrite = \"\";\n    var changed = false;\n    var proper = \"\";\n    var numLines = lines.length;\n    var lineNum = 1;\n    var newline = \"\";\n    var i;\n    for (i = 0; i < numLines; i++) {\n      var line = lines[i];\n      if (lineNum < numLines) {\n        newline = \"\\n\";\n      } else {\n        newline = \"\";\n      }\n      if (line.includes(item)) {\n        var ind = line.indexOf(item);\n        var numPotentialErrs = this.numItems(line, item, itemLen);\n        var indices = this.allIndices(line, item, ind, itemLen);\n        var j;\n        for (j = 0; j < numPotentialErrs; j++) {\n          if (!this.checkJavaDocInterfere(line)) { \n            if (toWrite === \"\") {\n              proper = this.getProperBefore(line, ind);\n              if (ind === 0 && !this.checkMult(line, item) \n                && !this.checkMultiComment(line, item, indices[j]) && !this.partOfWord(line, item, indices[j])) {\n                toWrite = line.substring(0, indices[j]); \n                toWrite += \" \" + line.substring(indices[j]); \n                indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                changed = true; \n              }\n              if (ind !== 0) {\n                if (line.charAt(ind - 1) !== ' ' && !this.checkMult(line, item) \n                  && !this.checkMultiComment(line, item, indices[j])&& !this.partOfWord(line, item, indices[j])) {\n                  toWrite = line.substring(0, indices[j]);\n                  toWrite += \" \" + line.substring(indices[j]);\n                  indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                  changed = true;\n                } else if (proper.trim() !== line.trim() && !this.checkMult(line, item) \n                  && !this.checkMultiComment(line, item, indices[j]) && !this.partOfWord(line, item, indices[j])) {\n                  toWrite = line.substring(0, indices[j]).trimRight();\n                  toWrite += \" \" + line.substring(indices[j]);\n                  indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                  changed = true;\n                }\n              }\n            } else {\n              if (!this.checkMult(toWrite, item) && !this.checkMultiComment(toWrite, item, indices[j]) && !this.partOfWord(line, item, indices[j])) {\n                proper = this.getProperBefore(toWrite, indices[j]);\n                var temp = \" \" + toWrite.substring(indices[j]);\n                toWrite = toWrite.substring(0, indices[j]).trimRight();\n                toWrite += temp;\n                indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                changed = true;\n              }\n            }\n          }\n        }\n        if (toWrite !== \"\") {\n          fileContent += toWrite + newline;\n        }\n        toWrite = \"\";\n      }\n      if (!changed) {\n        fileContent += line + newline;\n      }\n      changed = false;\n      lineNum++;\n    }\n    return fileContent;\n  }\n    \n  /**\n   * Method that ensures there is a single space after the item\n   * provided in the lines provided.\n   * @param {Array} lines the array of the lines of code.\n   * @param {String} item the item to look for in the code.\n   */\n  spaceAfter(lines, item) {\n    var fileContent = \"\";\n    var toWrite = \"\";\n    var itemLen = item.length;\n    var changed = false;\n    var numLines = lines.length;\n    var lineNum = 1;\n    var i;\n    var newline = \"\";\n    for (i = 0; i < numLines; i++) {\n      var line = lines[i];\n      if (lineNum < numLines) {\n        newline = \"\\n\";\n      } else {\n        newline = \"\";\n      }\n      if (line.includes(item)) {\n        var ind = line.indexOf(item);\n        var numPotentialErrs = this.numItems(line, item, itemLen);\n        var proper = \"\";\n        var indices = this.allIndices(line, item, ind, itemLen);\n        var j;\n        for (j = 0; j < numPotentialErrs; j++) {\n              if (!this.checkJavaDocInterfere(line)) {\n                  if (toWrite === \"\") {\n                      proper = this.getProperAfter(line, ind, itemLen);\n                      if (indices[j] === line.length - 1) {\n                        toWrite = line + \" \";\n                        indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                        changed = true;\n                      } else if (proper.trim() !== line.trim() && !this.checkMult(line, item)\n                        && !this.checkMultiComment(line, item, indices[j]) && !this.partOfWord(line, item, indices[j])) {\n                        toWrite = line.substring(0, indices[j] + itemLen);\n                        toWrite += \" \" + line.substring(indices[j] + itemLen).trimLeft();\n                        indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                        changed = true;\n                    }\n                  } else {\n                    if (indices[j] === toWrite.length - 1) {\n                      toWrite = toWrite + \" \";\n                      indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                      changed = true;\n                    } else if (!this.checkMult(toWrite, item) && !this.checkMultiComment(toWrite, item, indices[j]) && !this.partOfWord(line, item, indices[j])) {\n                      proper = this.getProperAfter(toWrite, indices[j], itemLen);\n                      var temp = toWrite.substring(indices[j] + itemLen).trimLeft();\n                      toWrite = toWrite.substring(0, indices[j] + itemLen) + \" \";\n                      toWrite += temp;\n                      indices = this.allIndices(toWrite, item, toWrite.indexOf(item), itemLen);\n                      changed = true;\n                    }\n                  }\n                }\n              }\n        if (toWrite !== (\"\")) {\n          fileContent += toWrite + newline;\n        }\n        toWrite = \"\";\n      }\n      if (!changed) {\n        fileContent += line + newline;\n      }\n      changed = false;\n      lineNum++;\n    }\n    return fileContent;\n  }\n        \n  /**\n   * Reads a line and ensures that it does not interefere \n   * with other ICEcΔp edits.\n   * @param {String} line the line to look over.\n   */\n  checkJavaDocInterfere(line) {\n    if (line === \"------- INCORRECT JAVADOC FORMAT -------\" || line === \"----------------------------------------\") {\n      return true; \n    }\n    return false; \n  }\n    \n  /**\n   * Reads a line and counts all appearances of item within\n   * it. Takes in the line, the item and the item's length. \n   * @param {String} line the line to look over. \n   * @param {String} item the item to count.\n   * @param {number} itemLen the length of the item.\n   */\n  numItems(line, item, itemLen) {\n    var total = 0;\n    var temp = line;\n    while (temp.includes(item) && temp.trim() !== item) {\n      total += 1;\n      var ind = temp.indexOf(item);\n      if (itemLen === 1) {\n        temp = temp.substring(ind + itemLen);\n      } else {\n        temp = temp.substring(ind + itemLen - 1);\n      }\n    }\n    return total;\n  }\n    \n  /**\n   * Reads a line and using the line, the item the first index \n   * of the item and the item's length, returns a list of\n   * all the indices of a string snippet within that line.\n   * @param {String} line the line to read over.\n   * @param {String} item the item to look for.\n   * @param {number} ind the first index of the item in the given line.\n   * @param {number} itemLen the length of the item.\n   */\n  allIndices(line, item, ind, itemLen) {\n    var indices = [];\n    indices.push(ind);\n    var curr = 0;\n    if (itemLen === 1) {\n      curr = ind + itemLen;\n    } else {\n      curr = ind + itemLen - 1;\n    }\n    var temp = line.substring(curr);\n    while (temp.includes(item) && temp.trim() !== item) {\n      curr += temp.indexOf(item);\n      indices.push(curr);\n      if (itemLen === 1) {\n        curr += itemLen;\n        temp = temp.substring(temp.indexOf(item) + itemLen);\n      } else {\n        curr += itemLen - 1;\n        temp = temp.substring(temp.indexOf(item) + itemLen - 1);\n      }\n    }\n    return indices;\n  }\n\n  /**\n   * Takes in a line, item and the index of the item and determines\n   * whether or not the item is part of a word within the line or\n   * not.\n   * @param {String} line \n   * @param {String} item \n   * @param {number} ind \n   */\n  partOfWord(line, item, ind) {\n    var itemLen = item.length; \n    // var letters = /^[A-Za-z]+$/; \n    var keywords = [\"assert\", \"catch\", \"do\", \"else\", \"finally\", \"for\", \"if\", \"synchronized\", \"try\", \"while\"];\n    if (keywords.includes(item)) {\n      if (ind !== 0 && ind+itemLen+1 <= line.length-1) {\n        var strBefore = line.substring(ind-1, ind);\n        var strAfter = line.substring(ind+itemLen, ind+itemLen+1); \n        \n        if (this.wordPattern.exec(strBefore) || this.wordPattern.exec(strAfter)) {\n          return true; \n        } \n      } else if (ind === 0) {\n        var strAfter2 = line.substring(ind+itemLen, ind+itemLen+1); \n        if (this.wordPattern.exec(strAfter2)) {\n          return true; \n        }\n      } else if (ind+itemLen+1 > line.length-1) {\n        var strBefore2 = line.substring(ind-1, ind);\n        if (this.wordPattern.exec(strBefore2)) {\n          return true; \n        }\n      }\n      return false; \n    } \n    return false; \n  }\n\n  /**\n   * Inspects a line and determines if the occurence of item is\n   * a multiple (ex. item is \"+\", checks if the first occurence \n   * in line is \"++\" or \"+=\"). Takes in the line and the item. \n   * @param {String} line the line in which to check for the item.\n   * @param {String} item the item to look for.\n   */\n  checkMult(line, item) {\n    if (line.includes(item)) {\n      var ind = line.indexOf(item);\n      if (ind !== 0 && ind !== (line.length-1)) {\n          if ((item === \"+\" || item === \"-\" || item === \"=\")\n          && (line.charAt(ind + 1) === '+' || line.charAt(ind + 1) === '-'\n          || line.charAt(ind + 1) === '=')) {\n          return true;\n        } else if ((item === \"+\" && line.charAt(ind + 1) === '=') || (item === \"=\"\n            && line.charAt(ind - 1) === '+')) {\n            return true;\n        } else if (item === \"/\" && line.charAt(ind + 1) === '/') {\n            return true;\n        } else if (item === \"/\" && line.charAt(ind - 1) === '/') {\n            return true;\n        } else {\n            return false;\n        }\n      } else if (ind === 0) {\n        if ((item === \"+\" || item === \"-\" || item === \"=\")\n          && (line.charAt(ind + 1) === '+' || line.charAt(ind + 1) === '-'\n          || line.charAt(ind + 1) === '=')) {\n          return true;\n        } else if ((item === \"+\" && line.charAt(ind + 1) === '=')) {\n            return true;\n        } else if (item === \"/\" && line.charAt(ind + 1) === '/') {\n            return true;\n        } else {\n            return false;\n        }\n        } else if (ind !== (line.length-1)) {\n            if (item === \"=\"\n              && line.charAt(ind - 1) === '+') {\n              return true;\n        } else if (item === \"/\" && line.charAt(ind - 1) === '/') {\n            return true;\n        } else {\n            return false;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Read a line and using the line and the index, determins if \n   * a certain '/' is part of a multiline comment declaration.\n   * @param {String} line the line to read over.\n   * @param {number} ind the index of the /.\n   */\n  checkMultiSlash(line, ind) {\n    if (line.trim() === \"*/\" || line.trim() === \"/**\" || line.trim() === \"/*\") {\n      return true; \n    } else if (ind !== 0 && ind !== line.length-1) {\n        if (line.charAt(ind + 1) === '*' || line.charAt(ind-1) === '*') {\n            return true; \n        }\n        return false; \n    } else if (ind !== line.length -1) {\n        if (line.charAt(ind + 1) === '*') {\n            return true; \n        }\n        return false; \n    } else if (ind !== 0) {\n        if (line.charAt(ind - 1) === '*') {\n              return true;\n        }\n        return false; \n    }    \n    return false;\n  }\n\n  /**\n   * Reads a line and using the line and the index determines if\n   * a certain '*' being inspected is part of a multiline comment\n   * declaration. \n   * @param {String} line the line to read over.\n   * @param {number} ind the index of the *. \n   */\n  checkMultiStar(line, ind) {\n    if (line.trim() === \"*/\" || line.trim() === \"/**\" || line.trim() === \"/*\") {\n    return true; \n    } else if (ind !== 0 && line.charAt(ind-1)=== '.') {\n      return true; \n    } \n    else if (ind !== 0 && ind !== line.length - 1) {\n        if (line.charAt(ind + 1) === '/' || line.charAt(ind - 1) === '/') {\n          return true;\n        } else if (line.charAt(ind + 1) === '*' || line.charAt(ind - 1) === '*') {\n          return true; \n        }\n        return false; \n    } else if (ind !== line.length -1) {\n          if (line.charAt(ind + 1) ==='/') {\n            return true;\n          } else if (line.charAt(ind + 1) === '*') {\n            return true; \n        }\n        return false; \n        \n    }\n    \n    return false;\n  }\n\n  /**\n   * Reads a line and using the line, the item and the first index\n   * of the item, determins if a certain element being inspected\n   * is part of a multiline comment declaration.  \n   * @param {String} line the line to read over.\n   * @param {String} item the item to look for. \n   * @param {number} ind the first index of the item within the line.\n   */\n  checkMultiComment(line, item, ind) {\n    if (item.trim() === \"*\" && this.checkMultiStar(line, ind)) {\n      return true;\n    } else if (item.trim() === \"/\" && this.checkMultiSlash(line, ind)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Takes in the line, the index and the item length and inspects a \n   * line and determins the proper format if there were to be a space\n   * after an item (substring representing character(s)). \n   * @param {String} line the line to read over.\n   * @param {number} ind the index of the item in the line.\n   * @param {number} itemLen the item's length.\n   */\n  getProperAfter(line, ind, itemLen) {\n    var proper = \"\";\n    if (ind !== line.length - 1 && (ind + itemLen) <= line.length - 1) {\n      var portion = line.substring(0, ind + itemLen);\n      var end = line.substring(ind + itemLen).trim();\n      proper = portion + \" \" + end;\n    }\n    return proper;\n  }\n\n  /**\n   * Takes in the line and the index of the item and inspects it\n   * to determine the proper format if there were to be a space\n   * before an item (substring representing character(s)).\n   * @param {String} line the line to read over.\n   * @param {number} ind the index of the item\n   */\n  getProperBefore(line, ind) {\n    var portion = line.substring(0, ind).trim();\n    var end = line.substring(ind);\n    var proper = portion + \" \" + end;\n    return proper;\n  }\n\n  /**\n   * Takes in the lines of a file and ensures that each line in it\n   * has no trailing blank spaces.\n   * @param {Array} lines the lines of the file.\n   */\n  removeTrailingBlank(lines) {\n    var fileContent = \"\";\n    var toWrite = \"\";\n    var numLines = lines.length;\n    var i;\n    for (i = 0; i < numLines; i++) {\n        var line = lines[i];\n        toWrite = line.trimRight();\n        fileContent += toWrite;\n        fileContent += \"\\n\"; \n    }\n    return fileContent;\n  }\n}","/**\n * Indentations class that fixes the indentations within\n * java code.\n */\nexport default class Indentations {\n    \n    /**\n     * Default constructor of Indentations.\n     */\n    constructor() {\n    }\n\n    /**\n     * Method that fixes the indentations within the content of the file \n     * provided.\n     * @param {String} content the original contents of the file.\n     */\n    fixIndentations(content) {\n        var fileContent = \"\";\n        var levels = 0;\n        var lineToWrite = \"\";\n        var newline = \"\";\n        var lineNum = 1;\n        var lines = content.split(\"\\n\");\n        var numLines = lines.length;\n        var comment = false;\n        var i;\n        for (i = 0; i < lines.length; i++) {\n            var l = lines[i];\n            if (lineNum < numLines) {\n                newline = \"\\n\";\n            } else {\n                newline = \"\";\n            }\n            if (l.trim() === \"\") {\n                lineToWrite = l + newline;\n            } else {\n                var line = l.trim();\n                if (line.indexOf('//') === 0) {\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                } else if (line.endsWith(\"*/\")) {\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                    comment = false;\n                } else if (line.startsWith(\"/**\") || line.startsWith(\"/*\")) {\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                    comment = true;\n                } else if (!comment && this.elseIndentMark(line)) {\n                    levels -= 1;\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                    levels += 1;\n                } else if (!comment && this.isIndentMark(line)) {\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                    levels += 1;\n                } else if (!comment && this.isEndIndentMark(line)) {\n                    levels -= 1;\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                } else {\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                }\n            }\n            fileContent += lineToWrite;\n            lineNum += 1;\n        }\n        return fileContent;\n    }\n\n    /**\n     * Returns true if the line ends with an indicator to increment\n     * an indentation in the next line, and false otherwise.\n     * @param {String} line the line to check for.\n     */\n    isIndentMark(line) {\n        if (line.trim().endsWith(\"{\")) {\n            return true;\n        } else if (line.includes(\"//\")) {\n            var subLine = line.substring(0, line.indexOf(\"//\"));\n            if (subLine.trim().endsWith(\"{\")) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns true if the line ends with an indicator\n     * to decrement indentation in the next line, and false otherwise.\n     * @param {String} line the line to check for.\n     */\n    isEndIndentMark(line) {\n        if (line.trim() === \"}\" || line.trim() === \"};\") {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns true if the line indicates an else or else if\n     * condition where indentation requires unique formatting\n     * accordingly.\n     * @param {String} line the line to look over. \n     */\n    elseIndentMark(line) {\n        if (line.includes(\"}\")) {\n            if (line.includes(\"else\") && (line.indexOf(\"}\") < line.indexOf(\"else\"))) {\n                return true;\n            }\n            if (line.includes(\"else if\") && (line.indexOf(\"}\") < line.indexOf(\"else if\"))) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Returns indentation based on the number of levels of \n     * indentation is required.\n     * @param {number} levels the number of indentation levels.\n     */\n    generateIndentation(levels) {\n        var indent = \"\";\n        var i;\n        for (i = 0; i < levels; i++) {\n            indent += \"    \";\n        }\n        return indent;\n    }\n}","/**\n * The RmJavadocs class that removes javadoc comment\n * from the code.\n */\nexport default class RmJavadocs {\n    \n    /**\n     * Default constructor of the RmJavadocs class.\n     */\n    constructor() {\n    }\n\n    /**\n     * Method that takes in the file content and returns the \n     * fixed file content where all javadoc comments have \n     * been removed.\n     * @param {String} content the content of the original file.\n     */\n    removeJavadocs(content) {\n        var fileContent = \"\";\n        var lines = content.split(\"\\n\");\n        var toWrite = \"\";\n        var openReached = false;\n        var closeReached = false;\n        var oneLine = false;\n        var lineNum = 1;\n        var numLines = lines.length;\n        var newline = \"\";\n        var i;\n        for (i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            if (lineNum < numLines) {\n                newline = \"\\n\";\n            } else {\n                newline = \"\";\n            }\n            if (line.includes(\"/**\") && line.includes(\"*/\")) {\n                openReached = false;\n                closeReached = false;\n                oneLine = true;\n            } else if (line.includes(\"/**\")) {\n                openReached = true;\n                closeReached = false;\n            } else if (line.includes(\"*/\")) {\n                closeReached = true\n            }\n            toWrite = line;\n            if ((openReached && !closeReached) || oneLine || (openReached && closeReached)) {\n                toWrite = \"\";\n                newline = \"\";\n            }\n            if (closeReached) {\n                openReached = false;\n                closeReached = false;\n            }\n            oneLine = false;\n            fileContent += toWrite + newline;\n        }\n        return fileContent;\n    }\n}","import Paper from '@material-ui/core/Paper';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport StepContent from '@material-ui/core/StepContent';\nimport UploadButtons from './UploadButtons';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport SpaceBarIcon from '@material-ui/icons/SpaceBar';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport FormatIndentIncreaseIcon from '@material-ui/icons/FormatIndentIncrease';\nimport CodeIcon from '@material-ui/icons/Code';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport Alert from '@material-ui/lab/Alert';\nimport Collapse from '@material-ui/core/Collapse';\nimport './Component.css';\nimport Javadocs from './Javadocs'; \nimport FileDownloadComponent from './FileDownloadComponent';\nimport SingleLines from './SingleLines';\nimport MultiLines from './MultiLines';\nimport Whitespaces from './Whitespaces';\nimport Indentations from './Indentations';\nimport RmJavadocs from './RmJavadocs';\n  \n/**\n * Method that returns the step headers for the main stepper.\n */\nfunction getSteps() {\n  return ['Choose files', 'Choose operations', 'Download your file'];\n}\n\n/**\n * The vertical linear stepper component.\n */\nfunction VerticalLinearStepper(props) {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n        color: props.mColor,\n        width: '70%',\n        height: '100%',\n        margin: 30,\n    },\n    button: {\n        backgroundColor: props.mColor,\n        '&:hover': {\n          backgroundColor: '#537b86',\n        },\n        color: props.bColor,\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    backButton: {\n        color: props.tColor,\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n        backgroundColor: props.bColor\n    },\n    step: {\n        color: props.tColor,\n    },\n    text: {\n      fontFamily: 'Open-Sans',\n    },\n  }));\n\n  /**\n   * The styled toggle button that is customized according to the\n   * app theme.\n   */\n  const StyledToggle = withStyles({\n    root: {\n      color: '#154854',\n      borderColor: props.mColor,\n      whiteSpace: 'break-spaces',\n      '&:hover': {\n        borderColor: props.mColor,\n      },\n      '&:selected': {\n        color: 'white',\n        backgroundColor: 'red',\n      },\n      backgroundColor: props.mColor,\n    },\n    selected: {\n      backgroundColor: props.mColor,\n      color: props.mColor,\n      borderColor: props.mColor,\n    },\n    label: {\n      '&:hover': {\n        color: props.tColor,\n      },\n      '&:selected': {\n        color: props.mColor,\n      }\n    }\n  })(ToggleButton);\n\n  /**\n   * The theme that is applied to the icons of the stepper.\n   */\n  const iconTheme = createMuiTheme({\n    props: {\n        MuiStepIcon: {\n            root: {\n                color: props.mColor,\n            },\n            active: {\n                color: props.mColor,\n            },\n            disabled: {\n              color: props.mColor,\n            }\n        },\n    },\n  });\n\n    /**\n     * The classes and the step variables that are used to track\n     * the state of the stepper.\n     */\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    /**\n     * The variables that are used to track the states of the different \n     * alerts \n     */\n    const [operationOpen, setOperationOpen] = React.useState(false);\n    const [fileOpen, setFileOpen] = React.useState(false);\n    const [acceptedOpen, setAcceptedOpen] = React.useState(false);\n    const [rejectedOpen, setRejectedOpen] = React.useState(false);\n\n    /**\n     * The variables that indicate which operations were selected.\n     */\n    const [javaSelected, setJava] = React.useState(false);\n    const [singleSelected, setSingle] = React.useState(false);\n    const [multiSelected, setMulti] = React.useState(false);\n    const [indentSelected, setIndent] = React.useState(false);\n    const [whiteSelected, setWhite] = React.useState(false);\n    const [rmJavaSelected, setRmJavaSelected] = React.useState(false);\n\n    /**\n     * The variables that keep track of the updated file names, the accepted files,\n     * the rejected files and the fixed file contents.\n     */\n    const [intialAcceptedFiles, setIntialAcceptedFiles] = React.useState([]);\n    const [intialRejectedFiles, setIntialRejectedFiles] = React.useState([]);\n    const [uploadedFiles, setUploadedFiles] = React.useState({});\n    const [fixedFileContents, setFixedFileContents] = React.useState({});\n    const [newFileNames, setNewFileNames] = React.useState([]);\n\n    /**\n     * Callback method that takes in the updated file name and replaces it\n     * within the new files state array.\n     * @param {String} oldName the old name of the file.\n     * @param {String} newName the new name of the file.\n     */\n    function fileCallback(oldName, newName) {\n      setNewFileNames(newFileNames.map(function(filename){return (filename === oldName ? newName : filename)}));\n    }\n\n    /**\n     * Handler method that handles the click of the next \n     * button during each step of the stepper.\n     */\n    const handleButton = () => {\n      if (activeStep === 0) {\n        handleNext();\n      } else if (activeStep === 1) {\n        handleRun();\n      } else {\n        handleDownloadAll();\n      }\n    }\n  \n    /**\n     * Handler method that handles the click of the next\n     * button specifically moving from the upload\n     * stage to the operation stage.\n     */\n    const handleNext = () => {\n      if (activeStep === 0) {\n        if (uploadedFiles.length > 0) {\n          setFileOpen(false);\n          setAcceptedOpen(false);\n          setRejectedOpen(false);\n          setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        } else {\n          setFileOpen(true);\n        }\n      }\n    };\n  \n    /**\n     * Handler method that handles the click of the back button\n     * based on which stage the user is on in the stepper.\n     */\n    const handleBack = () => {\n        if (activeStep === 1) {\n          setJava(false);\n          setSingle(false);\n          setMulti(false);\n          setWhite(false);\n          setIndent(false);\n          setRmJavaSelected(false);\n          if (operationOpen) {\n              setOperationOpen(false);\n          }\n          setAcceptedOpen(true);\n          if (intialRejectedFiles.length <= 0) {\n            setRejectedOpen(false);\n          } else {\n            setRejectedOpen(true);\n          }\n          setActiveStep((prevActiveStep) => prevActiveStep - 1);\n        } else if (activeStep === 2) {\n          handleReset();\n        } else {\n          setActiveStep((prevActiveStep) => prevActiveStep - 1);\n        }\n    };\n\n    /**\n     * Method that access the file contents and calls the resolve\n     * method to use the content accessed.\n     * @param {File} inputFile the file uploaded by the user.\n     */\n    function fileAccessMethod(inputFile){\n      return new Promise(\n      function(resolve) {\n      var reader = new FileReader();\n      reader.onloadend = (function(reader)\n      {\n          return function() {\n          resolve(reader.result);\n          }\n      })(reader);\n      reader.readAsText(inputFile);\n      });\n    }\n\n    /**\n     * Method that calls all the operations depending\n     * on which operations were selected.\n     */\n    function performAll() {\n      const java = new Javadocs();\n      const single = new SingleLines();\n      const multi = new MultiLines();\n      const white = new Whitespaces();\n      const indent = new Indentations();\n      const rmJava = new RmJavadocs();\n      var i;\n      var contentList = [];\n      for (i = 0; i < uploadedFiles.length; i++) {\n        var inputFile = uploadedFiles[i];\n        fileAccessMethod(inputFile).then(function(fileText) {\n          var fixedText = fileText;\n          if (rmJavaSelected) {\n            fixedText = rmJava.removeJavadocs(fixedText);\n          }\n          if (javaSelected) {\n            fixedText = java.addJavadocs(fixedText);\n          }\n          if (singleSelected) {\n            fixedText = single.removeSingleLines(fixedText);\n          }\n          if (multiSelected) {\n            fixedText = multi.removeMultiLines(fixedText);\n          }\n          if (whiteSelected) {\n            fixedText = white.fixWhitespaces(fixedText);\n          }\n          if (indentSelected) {\n            fixedText = indent.fixIndentations(fixedText);\n          }\n          contentList.push(fixedText);\n        });\n      }\n      setFixedFileContents(contentList);\n    }\n\n    /**\n     * Handler method that handles the run function and \n     * displays alerts if no operations have been selected.\n     */\n    const handleRun = () => {\n      if (activeStep === 1) {\n        if (!javaSelected && !singleSelected && !multiSelected && !whiteSelected && !indentSelected && !rmJavaSelected) {\n            setOperationOpen(true);\n        } else {\n            setOperationOpen(false);\n            performAll();\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n      }\n    }\n\n    /**\n     * Handler method that handles the downloading\n     * of all files.\n     */\n    const handleDownloadAll = () => {\n      var i;\n      for (i = 0; i < newFileNames.length; i++) {\n        var newFileName = newFileNames[i];\n        var content = fixedFileContents[i];\n        download(newFileName, content);\n      }\n    }\n\n    /**\n     * Helper method that downloads a single file using\n     * the filename and the content provided.\n     * @param {String} filename the name of the file.\n     * @param {String} text the content of the file.\n     */\n    function download(filename, text) {\n      var element = document.createElement('a');\n      element.setAttribute('href', 'data:.java;charset=utf-8,' + encodeURIComponent(text));\n      element.setAttribute('download', filename);\n    \n      element.style.display = 'none';\n      document.body.appendChild(element);\n    \n      element.click();\n    \n      document.body.removeChild(element);\n    }\n  \n    /**\n     * Handler method that performs a reset on all\n     * state variables for reuse in a second round \n     * of the stepper series.\n     */\n    const handleReset = () => {\n      setJava(false);\n      setSingle(false);\n      setMulti(false);\n      setWhite(false);\n      setIndent(false);\n      setRmJavaSelected(false);\n      if (operationOpen) {\n        setOperationOpen(false);\n      }\n      if (fileOpen) {\n        setFileOpen(false);\n      }\n      if (acceptedOpen) {\n        setAcceptedOpen(false);\n      }\n      if (rejectedOpen) {\n        setRejectedOpen(false);\n      }\n      setUploadedFiles({});\n      setIntialRejectedFiles([]);\n      setIntialAcceptedFiles([]);\n      setFixedFileContents({});\n      setNewFileNames([]);\n      setActiveStep(0);\n    };\n\n    /**\n     * StyledToggle used to create the Add Javadoc button.\n     */\n    function JavadocToggle() {\n        return (\n          <StyledToggle value=\"javadoc\" selected={javaSelected} onChange={() => {setJava(!javaSelected);}}>\n              <CodeIcon />  Add Javadocs\n          </StyledToggle>\n        );\n    }\n\n    /**\n     * StyledToggle used to create the Remove // Comments button.\n     */\n    function SingleToggle() {\n        return (\n            <StyledToggle value=\"single\" selected={singleSelected} onChange={() => {setSingle(!singleSelected);}}>\n                <SubjectIcon /> Remove // Comments\n            </StyledToggle>\n        );\n    }\n\n    /**\n     * StyledToggle used to create the Remove /* Comments button.\n     */\n    function MultiToggle() {\n        return(\n            <StyledToggle value=\"multi\" selected={multiSelected} onChange={() => {setMulti(!multiSelected);}}>\n                <SubjectIcon /> Remove /* Comments\n            </StyledToggle>\n        );\n    }\n\n    /**\n     * StyledToggle used to create the Fix Whitespaces button.\n     */\n    function WhitespaceToggle() {\n        return(\n          <StyledToggle value=\"whitespace\" selected={whiteSelected} onChange={() => {setWhite(!whiteSelected);}}>\n              <SpaceBarIcon /> Fix Whitespaces\n          </StyledToggle>\n        );\n    }\n\n    /**\n     * StyledToggle used to create the Remove Javadocs button.\n     */\n    function RmJavadocsToggle() {\n      return (\n        <StyledToggle value=\"rmJava\" selected={rmJavaSelected} onChange={() => {setRmJavaSelected(!rmJavaSelected);}}>\n            <FormatIndentIncreaseIcon /> Remove Javadocs\n        </StyledToggle>\n      );\n    }\n\n    /**\n     * Method that is called when files are added to the uploader. Both \n     * rejected and accepted files are passed in for display.\n     * @param {FileList, Array} acceptedFiles the array of files or the list of accepted files.\n     * @param {FileList, Array} rejectedFiles the array of files or the list of rejected files.\n     */\n    function onFileDrop(acceptedFiles, rejectedFiles) {\n      acceptedFiles = Array.from(acceptedFiles);\n      rejectedFiles = Array.from(rejectedFiles);\n      setIntialAcceptedFiles(acceptedFiles);\n      setIntialRejectedFiles(rejectedFiles);\n      if (acceptedFiles.length <= 0) {\n        setAcceptedOpen(false);\n      } else {\n        setAcceptedOpen(true);\n      }\n      if (rejectedFiles.length <= 0) {\n        setRejectedOpen(false);\n      } else {\n        setRejectedOpen(true);\n      }\n      setUploadedFiles(acceptedFiles);\n      var nameList = acceptedFiles.map(function(file){return file.name});\n      setNewFileNames(nameList);\n      if (acceptedFiles.length > 0) {\n        setFileOpen(false);\n      }\n    }\n\n    /**\n     * Returns a string representation of the list of files\n     * in order to display in the alert.\n     * @param {Array} list the list of files.\n     */\n    function getFileList(list) {\n      var fullString = \"\";\n      var i;\n      for (i = 0; i < list.length; i++) {\n        fullString += list[i].name + \", \";\n      }\n      fullString = fullString.substring(0, fullString.length - 2);\n      return fullString;\n    }\n  \n    /**\n     * Returns a string representation of the number of files\n     * that were rejected to display in the alert.\n     * @param {number} num the number of files.\n     */\n    function getRejectFileList(num) {\n      var fullString = \"\";\n      return fullString + num + \" file was not uploaded due to incorrect format\";\n    }\n\n    /**\n     * Returns the components that make up the first step in the stepper.\n     */\n    function stepOne() {\n      return (\n        <Typography className={classes.text}>\n            Upload files (.java file) for which you would like the program to clear style check errors:\n            <p></p>\n            <UploadButtons bColor={props.bColor} mColor={props.mColor} onFileDropped={onFileDrop}></UploadButtons>\n            <p></p>\n        </Typography>\n      );\n    }\n\n    /**\n     * Returns the components that make up the second step in the stepper.\n     */\n    function stepTwo() {\n        return (\n          <Typography className={classes.text}>\n              <p> Chooose the operations you want to perform on the .java files. The software will only apply\n                 the selected operations on the contents of the .java files and you can download the fixed version\n                 in the next step:\n              </p>\n              <div style={{ whiteSpace: 'break-spaces', lineHeight: 4.5 }}>\n                  <p></p>\n                  <JavadocToggle></JavadocToggle><span>    </span>\n                  <SingleToggle></SingleToggle><span>    </span>\n                  <MultiToggle></MultiToggle><span>    </span>\n                  <WhitespaceToggle></WhitespaceToggle><span>    </span>\n                  <RmJavadocsToggle></RmJavadocsToggle>\n                  <p></p>\n              </div>\n          </Typography>\n        );\n    }\n\n    /**\n     * Creates the file download components using the fixed\n     * file information and returns a list of the components to be \n     * added to the third step in the stepper.\n     */\n    function getFileDownloadComponents() {\n      var i;\n      var componentList = [];\n      for (i = 0; i < newFileNames.length; i++) {\n        var name = newFileNames[i];\n        componentList.push(\n          <div>\n          <FileDownloadComponent callbackFromParent={fileCallback} defaultFileName={name} contentList={fixedFileContents} fileIndex={i}></FileDownloadComponent>\n          </div>\n        );\n      }\n      return componentList;\n    }\n    \n    /**\n     * Returns the components that make up the third step in the stepper.\n     */\n    function stepThree() {\n      return (\n        <Typography className={classes.text}>\n          Enter a name for each file (without spaces) and download the files below. If you don't provide a name we will use the original file name\n          to download your file.\n          <p></p>\n          {getFileDownloadComponents()}\n          <p></p>\n        </Typography>\n      );\n    }\n\n    /**\n     * Returns the content of each step based on the number\n     * of the step provided.\n     * @param {number} step the step number.\n     */\n    function getStepContent(step) {\n        switch (step) {\n          case 0:\n              return stepOne();\n          case 1:\n              return stepTwo();\n          case 2:\n              return stepThree();\n          default:\n              return 'Unknown step';\n        }\n    }\n\n    /**\n     * Returns the stepper that contains all the information\n     * and functionality to run the software UI.\n     */\n    return (\n      <div className={classes.root}>\n        <Stepper activeStep={activeStep} orientation=\"vertical\" style={{ backgroundColor: props.bColor}}>\n          {steps.map((label, index) => (\n            <Step key={label} className={classes.step}>\n                <ThemeProvider theme={iconTheme}>\n                    <StepLabel>\n                        <Typography className='Step-header'>\n                            {label}\n                        </Typography>\n                    </StepLabel>\n                </ThemeProvider>\n              <StepContent>\n                <Typography>{getStepContent(index)}</Typography>\n                <Collapse in={acceptedOpen}>\n                  <p></p>\n                  <Alert width='100px'>{getFileList(intialAcceptedFiles)}</Alert>\n                  <p></p>\n                </Collapse>\n                <Collapse in={rejectedOpen}>\n                  <p></p>\n                  <Alert width='100px' severity=\"error\">{getRejectFileList(intialRejectedFiles.length)}</Alert>\n                  <p></p>\n                </Collapse>\n                <Collapse in={fileOpen} timeout='auto'> \n                    <p></p>\n                    <Alert severity=\"error\">Please upload at least one file</Alert>\n                    <p></p>\n                </Collapse>\n                <Collapse in={operationOpen} timeout='auto'> \n                    <p></p>\n                    <Alert severity=\"error\">Please select at least one operation</Alert>\n                    <p></p>\n                </Collapse>\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.backButton}\n                    >\n                      {activeStep === 2 && 'Reset'}\n                      {activeStep < 2 && 'Back'}\n                    </Button>\n                    <Button\n                      onClick={handleButton}\n                      className={classes.button}\n                      disableElevation\n                      variant='contained'\n                    >\n                      {activeStep === 0 && 'Next'}\n                      {activeStep === 1 && 'Run'}\n                      {activeStep === 2 && 'Download All Files'}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n      </div>\n    );\n  }\n\n  /**\n   * The stepper page itself, which is a paper that surrounds the \n   * stepper and contains the vertical linear stepper widget.\n   */\nexport default function StepperPage(props) {\n\n    /**\n     * The styles that are used to customize the components below.\n     */\n    const mainStyles = makeStyles((theme) => ({\n      root: {\n        display: 'flex',\n        '& > *': {\n          margin: theme.spacing(2),\n          marginTop: theme.spacing(9),\n          width: theme.spacing(window.screen.width),\n          height: theme.spacing(window.screen.height),\n        },\n      },\n      paper: {\n        '& > *': {\n          margin: theme.spacing(3),\n        },\n      }\n    }));\n\n    const classes = mainStyles();\n  \n    return(\n      <div className={classes.root}>\n        <Paper className={classes.paper} elevation={0} style={{ backgroundColor: props.bColor, height: window.screen.height, width: window.screen.width}}>\n            <VerticalLinearStepper bColor={props.bColor} mColor={props.mColor} tColor={props.tColor}>\n            </VerticalLinearStepper>\n        </Paper>\n      </div>\n    );\n  \n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './Component.css';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuList from '@material-ui/core/MenuList';\nimport Switch from '@material-ui/core/Switch';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport { useN02SwitchStyles } from '@mui-treasury/styles/switch/n02';\nimport CodeIcon from '@material-ui/icons/Code';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\n  \n/**\n * The PageHeader component.\n */\nexport default function PageHeader(props) {\n\n  /**\n   * Page navigation codes used to navigate between pages.\n   */\n  const HOME = 0;\n  const LIVE = 1;\n  const STATIC = 2;\n  const TUTORIAL = 3;\n  const RESOURCES = 4;\n\n  /**\n   * The state variables, anchors and styles used by the header \n   * components.\n   */\n  const [darkToggle, setDarkToggle] = React.useState(false);\n  const [settingsOpen, setSettingsOpen] = React.useState(false);\n  const [editorOpen, setEditorOpen] = React.useState(false);\n  const settingsAnchorRef = React.useRef(null);\n  const editorAnchorRef = React.useRef(null);\n  const switchStyles = useN02SwitchStyles();\n\n  /**\n   * The styles that are used to customize the page header.\n   */\n  const appBarStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    bar: {\n      backgroundColor: props.hColor\n    },\n    menuText: {\n      fontFamily: 'Open-Sans',\n      fontWeight: 600,\n      color: props.tColor,\n    },\n    title: {\n      flexGrow: 1,\n      color: props.mColor,\n    },\n    button: {\n      fontFamily: 'Open-Sans',\n      fontWeight: 600,\n      color: props.tColor,\n    },\n    menuClasses: {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n    },\n    switch: {\n      color: props.mColor,\n    },\n  }));\n\n  /**\n   * The styles that are used for the components below.\n   */\n  const classes = appBarStyles();\n\n  /**\n   * Handles the state change when the dark mode toggle\n   * is changed.\n   * @param {any} event the event.\n   */\n  const handleDarkToggle = (event) => {\n    setDarkToggle(event.target.checked);\n    props.darkModeCallback(event.target.checked);\n  }\n\n  /**\n   * Nagivates to the home page.\n   */\n  const goToHome = () => {\n    props.screenChangeCallback(HOME);\n  };\n\n  /**\n   * Navigates to the tutorial page.\n   */\n  const goToTutorial = () => {\n    props.screenChangeCallback(TUTORIAL);\n  };\n\n  /**\n   * Navigates to the static page.\n   */\n  const goToStatic = () => {\n    props.screenChangeCallback(STATIC);\n  };\n  \n  /**\n   * Navigates to the live page.\n   */\n  const goToLive = () => {\n    props.screenChangeCallback(LIVE);\n  };\n\n  /**\n   * Navigates to the resources page.\n   */\n  const goToResources = () => {\n    props.screenChangeCallback(RESOURCES);\n  };\n\n  /**\n   * Handles the state changes and opens the \n   * settings menu.\n   */\n  const handleSettingsToggle = () => {\n    setSettingsOpen((prevSettingsOpen) => !prevSettingsOpen);\n  };\n\n  /**\n   * Handles the state changes and closes the settings menu.\n   * @param {any} event the event.\n   */\n  const handleSettingsClose = (event) => {\n    if (settingsAnchorRef.current && settingsAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setSettingsOpen(false);\n  };\n\n  /**\n   * Handles the state changes and opens the editor \n   * menu.\n   */\n  const handleEditorToggle = () => {\n    setEditorOpen((prevEditorOpen) => !prevEditorOpen);\n  };\n\n  /**\n   * Handles the state changes and closes the editor menu.\n   * @param {event} event the event.\n   */\n  const handleEditorClose = (event) => {\n    if (editorAnchorRef.current && editorAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setEditorOpen(false);\n  };\n\n  /**\n   * The previous state of the settings menu.\n   */\n  const prevSettingsOpen = React.useRef(settingsOpen);\n  React.useEffect(() => {\n    if (prevSettingsOpen.current === true && settingsOpen === false) {\n      settingsAnchorRef.current.focus();\n    }\n\n    prevSettingsOpen.current = settingsOpen;\n  }, [settingsOpen]);\n\n  /**\n   * The previous state of the editor menu.\n   */\n  const prevEditorOpen = React.useRef(editorOpen);\n  React.useEffect(() => {\n    if (prevEditorOpen.current === true && editorOpen === false) {\n      editorAnchorRef.current.focus();\n    }\n\n    prevEditorOpen.current = editorOpen;\n  }, [editorOpen]);\n  \n  /**\n   * The components that make up the PageHeader.\n   */\n  return (\n      <div className={classes.root}>\n      <AppBar elevation={0} position=\"fixed\" className={classes.bar}>\n          <Toolbar>\n          <Typography variant=\"App-header\" className={classes.title}>\n              ICEcΔp v1.0\n          </Typography>\n          <Button onClick={goToHome} className={classes.button} variant=\"App-header\" color=\"inherit\">ICEcΔp Home</Button>\n          <Button onClick={goToTutorial} className={classes.button} variant=\"App-header\" color=\"inherit\">Tutorial</Button>\n          <Button ref={editorAnchorRef} onClick={handleEditorToggle} className={classes.button} variant=\"App-header\" color=\"inherit\">Editor</Button>\n          <Popper open={editorOpen} aria-haspopup=\"true\" aria-controls={editorOpen ? 'menu-list-grow' : undefined} anchorEl={editorAnchorRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n              <Grow\n                {...TransitionProps}\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n              >\n                <Paper style={{backgroundColor: props.hColor}}>\n                  <ClickAwayListener onClickAway={handleEditorClose}>\n                    <MenuList autoFocusItem={editorOpen} id=\"menu-list-grow\">\n                      <MenuItem style={{whiteSpace: 'break-spaces'}} onClick={goToLive}>\n                      <CodeIcon style={{ backgroundColor: props.iColor, color: props.tColor, borderRadius: 20, padding: 5}}></CodeIcon>\n                      <span>     </span>\n                      <Typography className={classes.menuText}>\n                        Live Editor\n                      </Typography>\n                      </MenuItem>\n                      <MenuItem style={{whiteSpace: 'break-spaces'}} onClick={goToStatic}>\n                      <InsertDriveFileIcon style={{ backgroundColor: props.iColor, color: props.tColor, borderRadius: 20, padding: 5}}></InsertDriveFileIcon>\n                      <span>     </span>\n                      <Typography className={classes.menuText}>\n                        Static Editor\n                      </Typography>\n                      </MenuItem>\n                    </MenuList>\n                  </ClickAwayListener>\n                </Paper>\n              </Grow>\n            )}\n          </Popper>\n          \n          {/* <Button onClick={goToResources} className={classes.button} variant=\"App-header\" color=\"inherit\">Resources</Button> */}\n          <Button ref={settingsAnchorRef} onClick={handleSettingsToggle} className={classes.button} variant=\"App-header\" color=\"inherit\">Settings</Button>\n          <Popper open={settingsOpen} aria-haspopup=\"true\" aria-controls={settingsOpen ? 'menu-list-grow' : undefined} anchorEl={settingsAnchorRef.current} role={undefined} transition disablePortal>\n            {({ TransitionProps, placement }) => (\n              <Grow\n                {...TransitionProps}\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n              >\n                <Paper style={{backgroundColor: props.hColor}}>\n                  <ClickAwayListener onClickAway={handleSettingsClose}>\n                    <MenuList autoFocusItem={settingsOpen} id=\"menu-list-grow\">\n                      <MenuItem style={{whiteSpace: 'break-spaces'}}>\n                        <Brightness2Icon style={{ backgroundColor: props.iColor, color: props.tColor, borderRadius: 20, padding: 5}}></Brightness2Icon>\n                        <span>     </span>\n                        <Typography className={classes.menuText}>\n                          Dark Mode\n                        </Typography>\n                        <span>        </span>\n                        <Switch\n                          color=\"primary\"\n                          classes={switchStyles}\n                          checked={darkToggle}\n                          onChange={handleDarkToggle}\n                        />\n                      </MenuItem>\n                    </MenuList>\n                  </ClickAwayListener>\n                </Paper>\n              </Grow>\n            )}\n          </Popper>\n          <Button className={classes.button} variant=\"App-header\" target=\"_blank\" href=\"https://docs.google.com/forms/d/1A8qwG5T8pZIKmCaPYYSiEoqgzKsWMKBYmpUAqJ4zWw0/prefill\" color=\"inherit\">contact us</Button>\n          </Toolbar>\n      </AppBar>\n      </div>\n  );\n}","import React from 'react';\nimport './Component.css';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { animateScroll as scroll } from \"react-scroll\";\n  \n/**\n * The MainInfoPage component.\n */\nexport default function MainInfoPage(props) {\n\n  const LIVE = 1;\n  const TUTORIAL = 3;\n\n  /**\n   * Styles used to customize text and other components within the\n   * MainInfoPage.\n   */\n  const mainStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(2),\n        marginTop: theme.spacing(9),\n        width: window.screen.width,\n        height: window.screen.height,\n      },\n    },\n    mainText: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      color: props.tColor,\n      fontWeight: 600,\n      fontSize: '150px',\n      fontFamily: 'Open-Sans',\n      marginLeft: theme.spacing(10),\n      marginTop: theme.spacing(15),\n      marginRight: theme.spacing(1),\n    },\n    subMainText: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      color: props.tColor,\n      fontSize: '35px',\n      fontWeight: 600,\n      fontFamily: 'Open-Sans',\n      marginLeft: theme.spacing(11),\n      marginRight: theme.spacing(1),\n    },\n    subText: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      color: props.tColor,\n      fontSize: '18px',\n      fontWeight: 600,\n      fontFamily: 'Open-Sans',\n      marginLeft: theme.spacing(11),\n      marginTop: theme.spacing(2),\n      marginRight: theme.spacing(8),\n    },\n    button: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      backgroundColor: props.tColor,\n      color: props.bColor,\n      marginTop: theme.spacing(5),\n      marginRight: theme.spacing(1),\n      marginLeft: theme.spacing(11),\n    },\n    button2: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      backgroundColor: props.tColor,\n      color: props.bColor,\n      marginRight: theme.spacing(1),\n      marginLeft: theme.spacing(11),\n      marginBotton: theme.spacing(5),\n      marginTop: theme.spacing(5),\n    },\n    buttonDiv: {\n      display: 'flex',\n      flexDirection: 'row',\n      flex: 1,\n    }\n  }));\n\n  /**\n   * The styles used in the components below.\n   */\n  const classes = mainStyles();\n\n  const goToEditor = () => {\n    props.screenChangeCallback(LIVE);\n  }\n\n  const goToTutorial = () => {\n    props.screenChangeCallback(TUTORIAL);\n  }\n\n  /**\n   * The components that make up the MainInfoPage.\n   */\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} className={props.logoStyle} style={{ height: 3*window.screen.height/4, width: window.screen.width }}>\n        <div>  \n          <Typography className={classes.mainText}>ICEcΔp</Typography>\n          <Typography className={classes.subMainText}>\n            (Interactive Convention Editor)\n          </Typography>\n          <Typography className={classes.subText}>\n            We all have faced issues with the 200+ style check errors that appear right when we are ready to submit our CS 61B\n            projects. In a few easy steps, you can get rid of many style check errors from your project.\n          </Typography>\n          <div className={classes.buttonDiv}>\n              <Button\n                  className={classes.button}\n                  disableElevation\n                  variant='contained'\n                  onClick={goToEditor}\n                >\n                  Start Editing\n              </Button>\n              <Button\n                className={classes.button2}\n                disableElevation\n                variant='contained'\n                onClick={goToTutorial}\n              >\n                Mini Tutorial\n              </Button>\n          </div>\n        </div>\n      </Paper>\n    </div>\n  );\n}","import React from 'react';\nimport './Component.css';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Check from '@material-ui/icons/Check';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Step from '@material-ui/core/Step';\nimport Stepper from '@material-ui/core/Stepper';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { makeStyles, withStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\n\n/**\n * The variables used to nagivate to pages.\n */\nconst LIVE = 1;\n\n/**\n * Returns the step titles of the tutorial stepper.\n */\nfunction getSteps() {\n  return [\n    \"Using CS 61B Materials\",\n    \"Uploading Files\",\n    \"Selecting Operations\",\n    \"Downloading\",\n    \"Final Steps\"\n  ];\n}\n\n/**\n * The HorizontalStepper component \n */\nfunction HorizontalStepper(props) {\n\n  /**\n   * The styles used for the HorizontalStepper component.\n   */\n  const mainStyles = makeStyles((theme) => ({\n    stepperRoot: {\n      width: \"100%\"\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n      color: props.tColor,\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n    button: {\n      backgroundColor: props.mColor,\n      color: props.bColor,\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      '&:hover': {\n        backgroundColor: '#537b86',\n      },\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n    stepLabel: {\n      color: props.mColor,\n    },\n    stepPaper: {\n      width: 1290,\n      height: 400,\n      padding: theme.spacing(3),\n      backgroundColor: props.pColor,\n    },\n    step4Paper: {\n      width: 1290,\n      height: 480,\n      padding: theme.spacing(3),\n      backgroundColor: props.pColor,\n    },\n    headingText: {\n      fontFamily: 'Open-Sans',\n      color: props.tColor,\n      fontWeight: 600,\n      fontSize: '20px',\n    },\n    subHeadingText: {\n      fontFamily: 'Open-Sans',\n      color: props.tColor,\n      fontWeight: 600,\n    },\n    normalText: {\n      fontFamily: 'Open-Sans',\n      color: props.tColor,\n    },\n    code: {\n      backgroundColor: '#000000',\n      color: '#00FF00',\n    }\n  }));\n\n  /**\n   * The styles, variables and states that are used by the elements.\n   */\n  const classes = mainStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  /**\n   * The first step content of the stepper.\n   */\n  function stepOne() {\n    return (\n      <div>\n        <Paper elevation ={0} className={classes.stepPaper}>\n          <Alert severity=\"warning\" variant=\"standard\">\n            <AlertTitle>Disclaimer:</AlertTitle>\n            ICEcap does not claim to be a be-all, end-all editing service. We <strong>highly </strong> \n            recommend manually checking your code, and using the class provided review mechanisms (make style, make check) before\n            turning in your code. Under no circumstance should you turn in your code <strong>only</strong> after running it through ICEcap.\n          </Alert>\n          <p></p>\n          <Typography className={classes.headingText}>Getting Started</Typography>\n          <p></p>\n          <Typography className={classes.normalText}>Use  <code className={classes.code}> make style</code> to get an idea of the kinds of errors your code has to better understand\n          what operations you might want to select. If you are confused about the errors that come up after running make style, be sure to \n          access the <a target=\"_blank\" href=\"https://inst.eecs.berkeley.edu/~cs61b/sp20/docs/style-guide.html\">61B style guide</a>, and reference the guidelines posted there. These are also the same guidelines we are basing our \n          automated corrections on. </Typography>\n          <p></p>\n          <Typography className={classes.normalText}> We're here to help with the <strong>objective</strong> errors - namely working with comments (Javadocs, Multiline, Single Line)\n          and whitespace issues. Please plan accordingly so you know what you'll need to manually fix after using ICEcΔp!\n          </Typography>\n        </Paper>\n      </div>\n    );\n  }\n\n  /**\n   * The second step content of the stepper.\n   */\n  function stepTwo() {\n    return(\n      <div>\n        <Paper elevation={0} className={classes.stepPaper}>\n          <div style={{display: 'flex', flexDirection: 'row', whiteSpace: 'break-spaces', lineHeight: 3}}>\n            <div style={{ lineHeight: 3, whiteSpace: 'break-spaces'}}>\n              <Typography className={classes.headingText}>Static</Typography>\n              <Typography className={classes.normalText}>Using our static editor, you can either drag and drop or selectively upload our files. \n              Keep in mind that using the static editor won't allow you to edit the files onsite.</Typography>\n              <p></p>\n              <Paper style={{ width: 625, height: 300}} className=\"staticUpload\" elevation={0}></Paper>\n            </div>\n            <span>      </span>\n            <div style={{ lineHeight: 3, whiteSpace: 'break-spaces'}}>\n              <Typography className={classes.headingText}>Live</Typography>\n              <Typography className={classes.normalText}>Using our live editor, you can edit your files after uploading them. \n              With multiple files, you can select different ones from the drop-down menu and make your necessary changes!</Typography>\n              <p></p>\n              <Paper style={{ width: 625, height: 300}} className=\"liveUpload\" elevation={0}></Paper>\n            </div>\n          </div>\n        </Paper>\n      </div>\n    );\n  }\n\n  /**\n   * The third step content of the stepper.\n   */\n  function stepThree() {\n    return(\n      <div>\n        <Paper elevation={0} className={classes.stepPaper}>\n          <div style={{display: 'flex', flexDirection: 'row', whiteSpace: 'break-spaces', lineHeight: 3}}>\n            <div style={{ lineHeight: 3, whiteSpace: 'break-spaces'}}>\n              <Typography className={classes.headingText}>Static</Typography>\n              <Typography className={classes.normalText}>Select the buttons for as many operations as you'd like to apply. Each time you make a selection, \n              you'll see the button color change. </Typography>\n              <p></p>\n              <Paper style={{ width: 625, height: 300}} className=\"staticChooseOps\" elevation={0}></Paper>\n            </div>\n            <span>      </span>\n            <div style={{ lineHeight: 3, whiteSpace: 'break-spaces'}}>\n              <Typography className={classes.headingText}>Live</Typography>\n              <Typography className={classes.normalText}>Select one or more operations from the dropdown menu. Each time you make a selection, you'll see it added to\n              the dropdown header. </Typography>\n              <p></p>\n              <Paper style={{ width: 625, height: 300}} className=\"liveChooseOps\" elevation={0}></Paper>\n            </div>\n          </div>\n        </Paper>\n      </div>\n    );\n  }\n\n  /**\n   * The fourth step content of the stepper.\n   */\n  function stepFour() {\n    return(\n      <div>\n        <Paper elevation={0} className={classes.step4Paper}>\n          <Alert severity=\"warning\">\n            <strong>Note:</strong> None of your original files are edited. Once you are done, if you download your files be sure to make the necessary replacements\n            so that your original files contain the edited, style-corrected content. Be sure to always save copies of your original files, by committing them \n            to prevent any unintended data loss, or allow yourself to revert to a prior version. \n          </Alert>\n          <p></p>\n          <div style={{display: 'flex', flexDirection: 'row', whiteSpace: 'break-spaces', lineHeight: 3}}>\n            <div style={{ lineHeight: 3, whiteSpace: 'break-spaces'}}>\n              <Typography className={classes.headingText}>Static</Typography>\n              <Typography className={classes.normalText}>Edit the names of your files before downloading as desired. You can download them individually, or all together. </Typography>\n              <p></p>\n              <Paper style={{ width: 625, height: 300}} className=\"staticDownload\" elevation={0}></Paper>\n            </div>\n            <span>      </span>\n            <div style={{ lineHeight: 3, whiteSpace: 'break-spaces'}}>\n              <Typography className={classes.headingText}>Live</Typography>\n              <Typography className={classes.normalText}>Edit the names of your files before downloading as you desire. Or, feel free to simply copy-paste \n                the edited content from the rightmost textbox directly into the desired file.</Typography>\n              <p></p>\n              <Paper style={{ width: 625, height: 300}} className=\"liveDownload\" elevation={0}></Paper>\n            </div>\n          </div>\n        </Paper>\n      </div>\n    );\n  }\n\n  /**\n   * The fifth step content of the stepper.\n   */\n  function stepFive() {\n    return(\n      <div>\n        <Paper elevation={0} className={classes.step4Paper}>\n          <Typography className={classes.headingText}>Final Steps</Typography>\n          <Typography className={classes.normalText}>That's about it! If you'd like to know what errors were made and how we corrected them, \n          click on 'View Difference', which can be found in the live editor. We highly encourage doing this to help you understand your errors!\n          Make sure to run <code className={classes.code}>make style</code> and <code className={classes.code}>make check</code> before \n          turning any final code that you have edited using our service, to ensure that no other issues have \n          arisen! We’d also recommend using your manual testing (integration tests, unit tests, etc.) to confirm \n          that your project/HW works as intended. </Typography>\n          <Typography className={classes.normalText}>\n          Good luck with your submission!\n          </Typography>\n          <p></p>\n\n          <Typography className={classes.subHeadingText}>Viewing Differences</Typography>\n          <Paper style={{ width: 625, height: 300}} className=\"seeDiff\" elevation={0}></Paper>\n        </Paper>\n      </div>\n    );\n  }\n\n  /**\n   * Returns the step content depending on the index\n   * of the step.\n   * @param {int} stepIndex the index of the step.\n   */\n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return stepOne();\n      case 1:\n        return stepTwo();\n      case 2:\n        return stepThree();\n      case 3:\n        return stepFour();\n      case 4:\n        return stepFive();\n      default:\n        return \"Unknown stepIndex\";\n    }\n  }\n\n  /**\n   * Handles the click of the next button in the stepper.\n   */\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  /**\n   * Handles the click of the back button in the stepper.\n   */\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  /**\n   * Navigates to the live editor.\n   */\n  const goToEditor = () => {\n    props.screenChangeCallback(LIVE);\n  }\n\n  /**\n   * The styles for the QontoConnector used in\n   * the stepper.\n   */\n  const QontoConnector = withStyles({\n    alternativeLabel: {\n      top: 10,\n      left: 'calc(-50% + 16px)',\n      right: 'calc(50% + 16px)',\n    },\n    active: {\n      '& $line': {\n        borderColor: props.mColor,\n      },\n    },\n    completed: {\n      '& $line': {\n        borderColor: props.mColor,\n      },\n    },\n    line: {\n      borderColor: '#CDCDCD',\n      borderTopWidth: 3,\n      borderRadius: 1,\n    },\n  })(StepConnector);\n\n  /**\n   * The styles for the QontoStepIcon used in\n   * the stepper.\n   */\n  const useQontoStepIconStyles = makeStyles({\n    root: {\n      color: props.mColor,\n      display: 'flex',\n      height: 22,\n      alignItems: 'center',\n    },\n    active: {\n      color: props.mColor,\n    },\n    circle: {\n      width: 8,\n      height: 8,\n      borderRadius: '50%',\n      backgroundColor: props.mColor,\n    },\n    completed: {\n      color: props.mColor,\n      zIndex: 1,\n      fontSize: 18,\n    },\n  });\n\n  /**\n   * The QontoStepIcon component.\n   */\n  function QontoStepIcon(props) {\n    const classes = useQontoStepIconStyles();\n    const { active, completed } = props;\n  \n    return (\n      <div\n        className={clsx(classes.root, {\n          [classes.active]: active,\n        })}\n      >\n        {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n      </div>\n    );\n  }\n\n  /**\n   * The QontoStepIcon prop types.\n   */\n  QontoStepIcon.propTypes = {\n    active: PropTypes.bool,\n    completed: PropTypes.bool,\n  };\n\n  return (\n    <div className={classes.stepperRoot}>\n      <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />} style={{ width: 1250, backgroundColor: props.bColor}}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={QontoStepIcon}>\n            <Typography className={classes.stepLabel}>{label}</Typography>\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        <div>\n          <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n          <div>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              className={classes.backButton}\n            >\n              Back\n            </Button>\n            {activeStep === steps.length - 1 ? \n            <Button disableElevation variant=\"contained\" className={classes.button} onClick={goToEditor}>Start Editing</Button>:\n            <Button disableElevation variant=\"contained\" className={classes.button} onClick={handleNext}>Next</Button>}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function TutorialPage(props) {\n\n  /**\n   * The styles used for the tutorial page components.\n   */\n  const mainStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(2),\n        marginTop: theme.spacing(9),\n        width: theme.spacing(window.screen.width),\n        height: theme.spacing(window.screen.height),\n      },\n    },\n    paper: {\n      '& > *': {\n          margin: theme.spacing(3),\n      },\n    },\n  }));\n  \n  const classes = mainStyles();\n\n  return(\n      <div className={classes.root}>\n          <Paper className={classes.paper} elevation={0} style={{ backgroundColor: props.bColor, height: 5*window.screen.height/6, width: window.screen.width }}>\n              <HorizontalStepper screenChangeCallback={props.screenChangeCallback} pColor={props.pColor} tColor={props.tColor} bColor={props.bColor} mColor={props.mColor}></HorizontalStepper>\n          </Paper>\n      </div>\n  );\n}","/**\n * LongLines class that marks lines longer than 80 characters within\n * the code.\n */\nexport default class LongLines {\n\n    /**\n     * Default constructor of the LongLines class.\n     */\n    constructor() {\n    }\n\n    /**\n     * Takes in the file content and marks all lines longer\n     * than 80 characters within the code, returning the new\n     * file content with the notations.\n     * @param {String} content \n     */\n    markLongLines(content) {\n        var fileContent = \"\";\n        var lines = content.split(\"\\n\");\n        var numLines = lines.length;\n        var lineNum = 1;\n        var i;\n        var toWrite = \"\";\n        for (i = 0; i < numLines; i++) {\n            var line = lines[i];\n            if (line.length > 80) {\n                toWrite = \"EXCEEDED LENGTH:\" + line;\n            } else {\n                toWrite = line;\n            }\n            fileContent += toWrite;\n            if (lineNum < numLines) {\n                fileContent += \"\\n\";\n            }\n            lineNum += 1;\n        }\n        return fileContent;\n    }\n}","/**\n * LongMethods class that marks the methods longer than\n * 80 lines within the code.\n */\nexport default class LongMethods {\n\n    /**\n     * Default constructor of the LongMethods class.\n     */\n    constructor() {\n        this.methodPattern = new RegExp(\n            \"(\\\\p{Space})*(public |protected |private )?\" +\n            \"(static )?\" +\n            \"(void |[\\\\w\\\\W]+ )\" +\n            \"([a-zA-Z0-9]+)\" +\n            \"\\\\(\" +\n            \"(([\\\\w\\\\W]+ [a-zA-Z0-9]+)|\" +\n            \"(([\\\\w\\\\W]+ [a-zA-Z0-9]+, )+[\\\\w\\\\W]+ [a-zA-Z0-9]+))?\" + \n            \"\\\\) ?\\\\{\");\n        this.classPattern = new RegExp(\n            \"(\\\\p{Space})*(public |protected |private )?\" +\n            \"(static )?\" + \n            \"(class )\" +\n            \"(extends |implements )?\" +\n            \"([a-zA-Z0-9]+) ?\\\\{\"\n        );\n    }\n\n    /**\n     * Takes in the content of the file and marks the point at \n     * which a method exceeds the 80 line limit, if it does.\n     * @param {string} content the content of the original file.\n     */\n    markLongMethods(content) {\n        var fileContent = \"\";\n        var lines = content.split(\"\\n\");\n        var numLines = lines.length;\n        var lineNum = 1;\n        var methodStart = false;\n        var methodLength = 0;\n        var exceededLength = false;\n        var toWrite = \"\";\n        var netBrace = 0;\n        var i;\n        for (i = 0; i < numLines; i++) {\n            var line = lines[i];\n            if (!this.classPattern.exec(line)) {\n                if (this.methodPattern.exec(line)) {\n                    methodLength = 1;\n                    netBrace = 1;\n                    methodStart = true;\n                } else {\n                    netBrace += this.getLineNetBrace(line);\n                    if (netBrace === 0) {\n                        methodStart = false;\n                        exceededLength = false;\n                    }\n                    if (methodLength < 60 && methodStart) {\n                        methodLength += 1;\n                        toWrite += line;\n                        if (lineNum < numLines) {\n                            toWrite += \"\\n\";\n                        }\n                    } else if (methodLength >= 60 && methodStart) {\n                        methodLength = 0;\n                        methodStart = false;\n                        exceededLength = true;\n                        toWrite += \"------------METHOD EXCEEDS 60 LINES HERE------------\\n\";\n                    }\n                    if (exceededLength && methodStart) {\n                        toWrite += line;\n                        if (lineNum < numLines) {\n                            toWrite += \"\\n\";\n                        }\n                    }\n                } \n            }\n            if (toWrite === \"\") {\n                fileContent += line;\n                if (lineNum < numLines) {\n                    fileContent += \"\\n\";\n                }\n                toWrite = \"\";\n            } else {\n                fileContent += toWrite;\n                toWrite = \"\";\n            }\n            lineNum++;\n        }\n        return fileContent;\n    }\n\n    /**\n     * Takes in a line and returns the net brace value within\n     * the line.\n     * @param {string} line the line of code.\n     */\n    getLineNetBrace(line) {\n        var net = 0;\n        var i;\n        for (i = 0; i < line.length; i++) {\n            if (line.charAt(i) === \"{\") {\n                net += 1;\n            }\n            if (line.charAt(i) === \"}\") {\n                net -= 1;\n            }\n        }\n        return net;\n    }\n}","import Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport { makeStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Select from 'react-select';\nimport RmJavadocs from './RmJavadocs';\nimport SingleLines from './SingleLines';\nimport Javadocs from './Javadocs';\nimport Whitespaces from './Whitespaces';\nimport MultiLines from './MultiLines';\nimport Dropzone from 'react-dropzone';\nimport AceEditor from 'react-ace';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/theme-katzenmilch\";\nimport \"ace-builds/src-noconflict/theme-nord_dark\";\nimport makeAnimated from 'react-select/animated';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { diff as DiffEditor } from \"react-ace\";\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { borderedTextFieldStylesHook } from '@mui-treasury/styles/textField/bordered';\nimport { bannerCheckboxStylesHook } from '@mui-treasury/styles/checkbox/banner';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useNeonCheckboxStyles } from '@mui-treasury/styles/checkbox/neon';\nimport LongLines from './LongLines';\nimport LongMethods from './LongMethods';\n\n/**\n * The EditorPage component.\n */\nexport default function EditorPage(props) {\n\n    /**\n     * The styles that are used to customize elements in the \n     * editor page.\n     */\n    const mainStyles = makeStyles((theme) => ({\n        margin: {\n            margin: theme.spacing(1),\n        },\n        dropCard: {\n            backgroundColor: props.bColor,\n            width: window.screen.width/2.6,\n            height: window.screen.height - (window.screen.height/40),\n        },\n        dropCardBorder: {\n            border: 'dashed',\n            borderColor: '#6493a1',\n            borderWidth: '2px',\n            width: (window.screen.width/2.6) - 10,\n            height: window.screen.height - (window.screen.height/40),\n        },\n        defaultCardBorder: {\n            border: 'dashed',\n            borderColor: props.bColor,\n            borderWidth: '2px',\n            width: (window.screen.width/2.6) - 10,\n            height: window.screen.height - (window.screen.height/40),\n        },\n        icon: {\n            color: '#6493a1',\n        },\n        root: {\n          display: 'flex',\n          '& > *': {\n            margin: theme.spacing(2),\n            marginTop: theme.spacing(9),\n            width: theme.spacing(window.screen.width),\n            height: theme.spacing(window.screen.height),\n          },\n        },\n        editorDiv: {\n            display: 'flex',\n            flexDirection: 'row',\n        },\n        subText: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            color: props.tColor,\n            fontSize: '17px',\n            fontWeight: 400,\n            fontFamily: 'Open-Sans',\n        },\n        paper: {\n            '& > *': {\n                margin: theme.spacing(1),\n            },\n        },\n        operationCard: {\n            padding: theme.spacing(1),\n        },\n    }));\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            backgroundColor: props.mColor,\n            color: props.bColor,\n            marginTop: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            '&:hover': {\n              backgroundColor: '#537b86',\n            },\n            fontFamily: 'Open-Sans',\n            fontWeight: 600,\n        },\n        clearButton: {\n            color: props.mColor,\n            borderColor: props.mColor,\n        },\n        input: {\n            display: 'none',\n        },\n        smallHeading: {\n            fontFamily: 'Open-Sans',\n            fontWeight: 600,\n            fontSize: 11,\n            color: props.tColor\n        },\n        disableButton: {\n            backgroundColor: props.iColor,\n            color: \"#C0C0C0\",\n            marginTop: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            fontFamily: 'Open-Sans',\n            fontWeight: 600,\n            '&:hover': {\n                backgroundColor: '#D3D3D3',\n            },\n        },\n        linesCard: {\n            '&:hover' : {\n                backgroundColor: '#D3D3D3',\n            }\n        },\n    }));\n\n    /**\n     * The color scheme for this app.\n     */\n    var myColor = {\n        50: '#b1ced0',\n        100: '#a2c4c6',\n        200: '#92bbbd',\n        300: '#83b1b3',\n        400: '#73a7aa',\n        500: '#6493a1',\n        600: '#5a8e90',\n        700: '#507e80',\n        800: '#466e70',\n        900: '#3c5e60',\n        A100: '#a2c4c6',\n        A200: '#92bbbd',\n        A400: '#83b1b3',\n    }\n\n    /**\n     * The theme that overrides the primary color\n     * with the color scheme.\n     */\n    const textTheme = createMuiTheme({\n        palette: {\n          primary: myColor,\n        },\n    });\n\n    /**\n     * State variables and styles that are used to \n     * keep track of and display elements in the \n     * editor page.\n     */\n    const formControlLabelStyles = bannerCheckboxStylesHook.useFormControlLabel();\n    const checkboxStyles = bannerCheckboxStylesHook.useCheckbox();\n    const neonStyles = useNeonCheckboxStyles();\n    const animatedComponents = makeAnimated();\n    const classes = mainStyles();\n    const itemClasses = useStyles();\n    const inputBaseStyles = borderedTextFieldStylesHook.useInputBase();\n    const [inputText, setInputText] = React.useState(\"\");\n    const [fileTextList, setFileTextList] = React.useState([]);\n    const [uploadedFiles, setUploadedFiles] = React.useState([]);\n    const [fileName, setFileName] = React.useState(\"\");\n    const [newFileName, setNewFileName] = React.useState(\"\");\n    const [index, setIndex] = React.useState(0);\n    const [isEditing, setIsEditing] = React.useState(false);\n    const [chosenOperations, setChosenOperations] = React.useState([]);\n    const [firstDisplay, setFirstDisplay] = React.useState(\"\");\n    const [secondDisplay, setSecondDisplay] = React.useState(\"\");\n    const [openField, setOpenField] = React.useState(false);\n    const [fixedText, setFixedText] = React.useState(\"\");\n    const [openDiff, setOpenDiff] = React.useState(false);\n    const [diffVal, setDiffVal] = React.useState([]);\n    const [markLongLinesToggle, setMarkLongLinesToggle] = React.useState(false);\n    const [markLongMethodsToggle, setMarkLongMethodsToggle] = React.useState(false);\n    const operations = [\n        { value: 0, label: 'Remove Javadocs' },\n        { value: 1, label: 'Remove // Comments' },\n        { value: 2, label: 'Remove /* Comments' },\n        { value: 3, label: 'Add Javadocs' },\n        { value: 4, label: 'Fix Whitespaces' },\n    ];\n\n    // function handleClear() {\n    //     setInputText(\"\");\n    //     setFileTextList([]);\n    //     setUploadedFiles([]);\n    //     setFileName(\"\");\n    //     setNewFileName(\"\");\n    //     setIndex(0);\n    //     setIsEditing(false);\n    //     setChosenOperations([]);\n    //     setFirstDisplay(\"\");\n    //     setSecondDisplay(\"\");\n    //     setOpenField(false);\n    //     setFixedText(\"\");\n    //     setOpenDiff(false);\n    //     setDiffVal([]);\n    // }\n\n    /**\n     * Takes in a new text and updates the states and display\n     * for the first display (first editor box).\n     * @param {String} newText the new text. \n     */\n    function handleTextChange(newText) {\n        setIsEditing(true);\n        if (fileTextList.length > 0) {\n          var oldText = fileTextList[index];\n          setFileTextList(fileTextList.map(function(filetext){return (filetext === oldText ? newText : filetext)}));\n        } else {\n          setInputText(newText);\n          setFirstDisplay(newText);\n          setFileName(\"File1.java\");\n        }\n    }\n\n    /**\n     * Updates and returns the display text for \n     * the first editor box.\n     */\n    function getFirstDisplayText() {\n        if (!isEditing) {\n          if (uploadedFiles.length !== 0) {\n            var inputFile = uploadedFiles[index];\n            fileAccessMethod(inputFile).then(function(fileText) {\n              if (fileText === fileTextList[index]) {\n                setFirstDisplay(fileText);\n              } else {\n                setFirstDisplay(fileTextList[index]);\n              }\n            });\n          } else {\n              setFirstDisplay(inputText);\n          }\n          return firstDisplay;\n        }\n    }\n\n    /**\n     * Takes in a filename and validates it, returning the \n     * new updated filename.\n     * @param {String} name the filename.\n     */\n    function validateFilename(name) {\n        if (name.trim() === \"\") {\n            return fileName;\n        } else {\n            name = name.replace(\" \", \"_\");\n            if (name.endsWith(\".java\")) {\n                return name;\n            } else if (!name.includes(\".\") && !name.includes(\".java\")) {\n                return name + \".java\";\n            } else if (name.includes(\".\")) {\n                var dotIndex = name.indexOf(\".\", 0);\n                return name.substring(0, dotIndex) + \".java\";\n            } else {\n                return name;\n            }\n        }\n    }\n\n    /**\n     * Handles the input typed into the textbox that\n     * sets the new file name to download. \n     * @param {any} event the event.\n     */\n    const handleFileNameChange = (event) => {\n        setNewFileName(event.target.value);\n    };\n\n    /**\n     * Returns a set of options for the file selector\n     * depending on the uploaded files.\n     */\n    function getOptions() {\n        if (uploadedFiles.length === 0) {\n            return [];\n        } else {\n            var options = [];\n            var i;\n            for (i = 0; i < uploadedFiles.length; i++) {\n                options.push({value: i, label: uploadedFiles[i].name});\n            }\n            return options;\n        }\n    }\n\n    /**\n     * Returns the file selector based on the options/the\n     * uploaded files.\n     */\n    function getSelector() {\n        var fileOptions = getOptions();\n        if (fileOptions.length === 0) {\n            return <Select\n            isSearchable={false}\n            placeholder=\"Select file\"\n            options={fileOptions}\n            onChange={handleChange}\n            theme={theme => ({\n                ...theme,\n                colors: {\n                ...theme.colors,\n                primary25: '#e3ecef',\n                primary: '#6493a1',\n                neutral80: '#154854',\n                neutral90: '#154854',\n                },\n            })}\n            >\n            </Select>;   \n        } else {\n            return <Select\n            isSearchable={false}\n            value={fileOptions[index]}\n            options={fileOptions}\n            onChange={handleChange}\n            theme={theme => ({\n                ...theme,\n                colors: {\n                ...theme.colors,\n                primary25: '#e3ecef',\n                primary: '#6493a1',\n                neutral80: '#154854',\n                neutral90: '#154854',\n                },\n            })}\n            >\n            </Select>;\n        }\n    }\n\n    /**\n     * Handles the change in the file selector and updates\n     * the display of the first text box accordingly.\n     * @param {any} event the event.\n     */\n    const handleChange = (event) => {\n        if (uploadedFiles.length !== 0) {\n          setIsEditing(false);\n          setIndex(event.value);\n          setFirstDisplay(fileTextList[event.value]);\n          setFileName(uploadedFiles[event.value].name);\n        }\n    };\n\n    /**\n     * Handles the state changes that are made in order to display the \n     * uploaded files by the user. \n     * @param {Array} acceptedFiles the files accepted by the uploader. \n     */\n    function handleDrop(acceptedFiles) {\n        if (acceptedFiles.length !== 0) {\n            var i;\n            var texts = [];\n            for(i = 0; i < acceptedFiles.length; i++) {\n            var inputFile = acceptedFiles[i];\n            fileAccessMethod(inputFile).then(function(fileText){\n                texts.push(fileText);\n            });\n            }\n            setFileTextList(texts);\n            setUploadedFiles(Array.from(acceptedFiles));\n            setFileName(acceptedFiles[0].name);\n        }\n    }\n\n    /**\n     * Function that takes in an input file and provides \n     * access to the contents of the input file.\n     * @param {File} inputFile the input file.\n     */\n    function fileAccessMethod(inputFile){\n        return new Promise(\n        function(resolve) {\n        var reader = new FileReader();\n        reader.onloadend = (function(reader)\n        {\n            return function() {\n                resolve(reader.result);\n            }\n        })(reader);\n        reader.readAsText(inputFile);\n        });\n    }\n\n    /**\n     * The handler that takes in the action performed by the selector and the\n     * array of options selected and updates the states accordingly.\n     * @param {Array} value the array of selected values.\n     * @param {Action} action the action that the selector received.\n     */\n    function handleOperationSelect(value, action) {\n        if (value === null) {\n            setChosenOperations([]);\n            return;\n        }\n        switch (action) {\n          case 'clear':\n            value = [];\n            break;\n        }\n        setChosenOperations(value);\n    }\n\n    /**\n     * Handles the execution of the operations on the input\n     * file content and updates the fixed text accordingly.\n     */\n    function handleRun() {\n        var newText = \"\";\n        if (uploadedFiles.length === 0) {\n            newText = firstDisplay;\n        } else {\n            newText = fileTextList[index];\n        }\n        var selected = chosenOperations.map((op) =>  {return op.value});\n        if (selected.includes(0)) {\n            var rmJava = new RmJavadocs();\n            newText = rmJava.removeJavadocs(newText);\n        }\n        if (selected.includes(1)) {\n            var single = new SingleLines();\n            newText = single.removeSingleLines(newText);\n        }\n        if (selected.includes(2)) {\n            var multi = new MultiLines();\n            newText = multi.removeMultiLines(newText);\n        }\n        if (selected.includes(3)) {\n            var java = new Javadocs();\n            newText = java.addJavadocs(newText);\n        }\n        if (selected.includes(4)) {\n            var whitespace = new Whitespaces();\n            newText = whitespace.fixWhitespaces(newText);\n        }\n        if (markLongLinesToggle) {\n            var longLines = new LongLines();\n            newText = longLines.markLongLines(newText);\n        }\n        if (markLongMethodsToggle) {\n            var longMethods = new LongMethods();\n            newText = longMethods.markLongMethods(newText);\n        }\n        setSecondDisplay(newText);\n        setFixedText(newText);\n    }\n\n    /**\n     * Returns the display text for the second text box.\n     */\n    function getSecondDisplayText() {\n        if (secondDisplay === \"\") {\n            return <AceEditor\n            mode=\"java\"\n            width={(window.screen.width/2.6)}\n            height={window.screen.height - (window.screen.height/40)}\n            theme={props.eTheme}\n            onChange={handleSecondTextChange}\n            >\n            </AceEditor>;\n        } else {\n            return <AceEditor\n            theme={props.eTheme}\n            mode=\"java\"\n            width={(window.screen.width/2.6)}\n            height={window.screen.height - (window.screen.height/40)}\n            onChange={handleSecondTextChange}\n            value={secondDisplay}\n            >\n            </AceEditor>;\n        }\n    }\n\n    /**\n     * Handles the text changes in the second display \n     * box and updates the state variables accordingly.\n     * @param {String} newText the new text.\n     */\n    function handleSecondTextChange(newText) {\n        setSecondDisplay(newText);\n        setFixedText(newText);\n    }\n\n    /**\n     * Returns the button that needs to be displayed when\n     * the user is changing the file name. If the textbox is shown\n     * the button displayed is \"Done\" otherwise it is displayed as \n     * \"Change Filename\"\n     */\n    function getChangeFileNameButton() {\n        if (openField) {\n            return <Button className={itemClasses.button} onClick={() => {setOpenField(!openField)}}>Done</Button>;\n        } else {\n            return <Button className={itemClasses.button} onClick={() => {setOpenField(!openField)}}>Change Filename</Button>;\n        }\n    }\n\n    /**\n     * Takes in the name and content of the file and performs\n     * a download to the user's device.\n     * @param {String} filename the name of the file.\n     * @param {String} text the content of the file.\n     */\n    function download(filename, text) {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:.java;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n      \n        element.style.display = 'none';\n        document.body.appendChild(element);\n      \n        element.click();\n      \n        document.body.removeChild(element);\n    }\n\n    /**\n     * Performs the donwload of the fixed file using the \n     * correct state variables.\n     */\n    function handleDownload() {\n        if (newFileName !== \"\") {\n            var validated = validateFilename(newFileName);\n            download(validated, fixedText);\n        } else {\n            download(fileName, fixedText);\n        }\n    }\n\n    /**\n     * Opens the diff editor dialog display.\n     */\n    function handleDiffOpen() {\n        setDiffVal([firstDisplay, fixedText]);\n        setOpenDiff(true);\n    }\n\n    /**\n     * Closes the diff editor dialog display.\n     */\n    function handleDiffClose() {\n        setOpenDiff(false);\n    }\n\n    /**\n     * Updates the diff editor with the new value upon changing \n     * the content of the second display editor.\n     * @param {Array} newVal the new value.\n     */\n    function handleDiffChange(newVal) {\n        setDiffVal([firstDisplay, newVal[1]]);\n    }\n\n    /**\n     * Applies the changes made to the diff editor to the \n     * original display.\n     */\n    function applyChanges() {\n        setFixedText(diffVal[1]);\n        setSecondDisplay(diffVal[1]);\n    }\n\n    /**\n     * Handles the selection of the long lines option.\n     */\n    const handleLongLinesCheck = (event) => {\n        setMarkLongLinesToggle(event.target.checked);\n    };\n\n    const handleLongMethodsCheck = (event) => {\n        setMarkLongMethodsToggle(event.target.checked);\n    }\n\n    return(\n        <div className={classes.root}>\n            <Paper className={classes.paper} elevation={0} style={{ backgroundColor: props.bColor, height: window.screen.height, width: window.screen.width}}>\n                <div style={{ flex: 1, flexDirection: 'row', display: 'flex' }}>\n                    <Card className={classes.operationCard} elevation={0} style={{ backgroundColor: props.hColor, width: window.screen.width/6, height: window.screen.height - (window.screen.height/28) }}>\n                        <GridList cellHeight={window.screen.height - (window.screen.height/28)} cellWidth={window.screen.width/4} cols={1}>\n                            <div style={{ whiteSpace: 'break-spaces' }}>\n                                <Typography className={itemClasses.smallHeading}>\n                                    FILES\n                                </Typography>\n                                <p></p>\n                                {getSelector()}\n                                <p></p>\n                                <input\n                                accept=\".java\"\n                                className={itemClasses.input}\n                                id=\"contained-button-file\"\n                                multiple\n                                type=\"file\"\n                                />\n                                <label htmlFor=\"contained-button-file\">\n                                <Button \n                                variant=\"contained\" \n                                component=\"span\"\n                                className={itemClasses.button}\n                                disableElevation\n                                onClick={() => {\n                                    document.getElementById('contained-button-file').onchange = function(event) {\n                                    var fileList = event.target.files;\n                                    handleDrop(fileList, []);\n                                }\n                                }}\n                                >\n                                    Upload Files\n                                </Button>\n                                </label>\n                                <p></p>\n                                <div style={{ whiteSpace: 'break-spaces', minHeight: window.screen.height/20 }}>\n                                    <p></p>\n                                </div>  \n                                <Typography className={itemClasses.smallHeading}>\n                                    OPERATIONS\n                                </Typography>\n                                <p></p>\n                                <Select\n                                value={chosenOperations}\n                                animatedComponents={animatedComponents}\n                                placeholder=\"Select operations\"\n                                options={operations}\n                                isClearable={true}\n                                isMulti\n                                closeMenuOnSelect={false}\n                                onChange={handleOperationSelect}\n                                theme={theme => ({\n                                    ...theme,\n                                    colors: {\n                                    ...theme.colors,\n                                    primary25: '#e3ecef',\n                                    primary: '#6493a1',\n                                    dangerLight: '#6493a1',\n                                    danger: '#154854',\n                                    neutral10: '#e3ecef',\n                                    neutral80: '#154854',\n                                    neutral90: '#154854',\n                                    },\n                                })}\n                                >\n                                </Select>\n                                <p></p>\n                                <ThemeProvider theme={textTheme}>\n                                    <FormControlLabel\n                                        style={{ width: window.screen.width/6.6 }}\n                                        classes={formControlLabelStyles}\n                                        control={\n                                            <ThemeProvider theme={textTheme}>\n                                                <Checkbox\n                                                    checked={markLongLinesToggle}\n                                                    style={{ borderColor: myColor, color: myColor, alignSelf: 'flex-start', marginTop: -3 }}\n                                                    disableRipple\n                                                    classes={neonStyles}\n                                                    checkedIcon={<span />}\n                                                    icon={<span />}\n                                                    onChange={handleLongLinesCheck}\n                                                />\n                                            </ThemeProvider>\n                                        }\n                                        label={\n                                        <>\n                                            <Typography style={{ color: props.tColor }}>\n                                                Mark lines &#8827; 80\n                                            </Typography>\n                                            <Typography component=\"span\" style={{ color: props.iColor }}>\n                                                Marks lines exceeding 80 chars\n                                            </Typography>\n                                        </>\n                                        }\n                                    />\n                                </ThemeProvider>\n                                <ThemeProvider theme={textTheme}>\n                                    <FormControlLabel\n                                        style={{ width: window.screen.width/6.6 }}\n                                        classes={formControlLabelStyles}\n                                        control={\n                                            <ThemeProvider theme={textTheme}>\n                                                <Checkbox\n                                                    checked={markLongMethodsToggle}\n                                                    style={{ borderColor: myColor, color: myColor, alignSelf: 'flex-start', marginTop: -3 }}\n                                                    disableRipple\n                                                    classes={neonStyles}\n                                                    checkedIcon={<span />}\n                                                    icon={<span />}\n                                                    onChange={handleLongMethodsCheck}\n                                                />\n                                            </ThemeProvider>\n                                        }\n                                        label={\n                                        <>\n                                            <Typography style={{ color: props.tColor }}>\n                                                Mark methods &#8827; 80\n                                            </Typography>\n                                            <Typography component=\"span\" style={{ color: props.iColor }}>\n                                                Marks methods exceeding 80 lines\n                                            </Typography>\n                                        </>\n                                        }\n                                    />\n                                </ThemeProvider>\n                                <p></p>\n                                {(chosenOperations.length === 0 && !markLongLinesToggle) || firstDisplay === \"\"  ? <Button variant=\"contained\" disableElevation disableRipple className={itemClasses.disableButton}>Run</Button> :\n                                <Button disableElevation variant=\"contained\" className={itemClasses.button} onClick={handleRun}>Run</Button>}\n                                <div style={{ whiteSpace: 'break-spaces', minHeight: window.screen.height/20 }}>\n                                    <p></p>\n                                </div>\n                                <Typography className={itemClasses.smallHeading}>\n                                    DOWNLOADING\n                                </Typography>\n                                <Collapse in={openField}>\n                                    <p></p>\n                                    <ThemeProvider theme={textTheme}>\n                                        <TextField \n                                        InputProps={{ classes: inputBaseStyles, disableUnderline: true }}\n                                        placeholder={'filename'}\n                                        value={newFileName}\n                                        onChange={handleFileNameChange}\n                                        variant=\"outlined\"\n                                        />\n                                    </ThemeProvider>\n                                    <p></p>\n                                </Collapse>\n                                <p></p>\n                                {fixedText === \"\" ? \n                                <Button variant=\"contained\" disableElevation disableRipple className={itemClasses.disableButton}>Change Filename</Button> :\n                                getChangeFileNameButton()}\n                                <p></p>\n                                {fixedText !== \"\" ? <Button className={itemClasses.button} onClick={handleDownload}>Download File</Button> :\n                                <Button component=\"span\" variant=\"contained\" disableElevation disableRipple className={itemClasses.disableButton}>Download File</Button>}\n                                <p></p>\n                                {fixedText !== \"\" ? <Button className={itemClasses.button} onClick={handleDiffOpen}>View Difference</Button> :\n                                <Button disableElevation disableRipple variant=\"contained\" className={itemClasses.disableButton}>View Difference</Button>}\n                                <Dialog\n                                    maxWidth='lg'\n                                    fullWidth\n                                    PaperProps={{\n                                        style: {\n                                            height: window.screen.height/1.2,\n                                            backgroundColor: props.bColor,\n                                        }\n                                    }}\n                                    open={openDiff}\n                                    onClose={handleDiffClose}\n                                    aria-labelledby=\"alert-dialog-title\"\n                                    aria-describedby=\"alert-dialog-description\"\n                                >\n                                    <DialogTitle className={classes.subText} id=\"alert-dialog-title\">{\"View the differences in your code below:\"}</DialogTitle>\n                                    <DialogContent>\n                                        <DialogContentText className={classes.subText}>The highlighted lines show the differences between your original code (on the left) and the version fixed by ICEcap (on the right). \n                                        Making changes within the text editors will show live updates on the changed lines and will not directly update the files in the live editor. Use the \"Apply Changes\" button to apply edits to the live editor.</DialogContentText>\n                                        <div style={{ display: 'flex', flex: 1, flexDirection: 'row' }}>\n                                            <DiffEditor\n                                            className={\"codeMarker\"}\n                                            onChange={handleDiffChange}\n                                            width={window.screen.width/1.65}\n                                            height={window.screen.height/1.7}\n                                            value={diffVal}\n                                            setOptions={{useWorker: false}}\n                                            mode=\"java\"\n                                            theme={props.eTheme}\n                                            >\n                                            </DiffEditor>\n                                        </div>\n                                    </DialogContent>\n                                    <DialogActions>\n                                    {diffVal[1] === secondDisplay || diffVal[1] === fixedText ?\n                                    <Button disableElevation disableRipple className={itemClasses.disableButton}>Apply Changes</Button> :\n                                    <Button disableElevation onClick={applyChanges} className={itemClasses.button}>Apply Changes</Button>}\n                                    <Button disableElevation onClick={handleDiffClose} className={itemClasses.button}>\n                                        Close\n                                    </Button>\n                                    </DialogActions>\n                                </Dialog>\n                                <p></p>\n                                <div style={{ whiteSpace: 'break-spaces', minHeight: 40 }}>\n                                    <p></p>\n                                </div>\n                                {/* <Button className={itemClasses.clearButton} onClick={handleClear} disableElevation variant=\"outlined\">Clear All</Button> */}\n                            </div>\n                        </GridList>\n                    </Card>\n                    <span>  </span>\n                    <Dropzone className={classes.dropCard} onDrop={handleDrop} accept='.java'>\n                        {({getRootProps, getInputProps, isDragActive, isDragReject, isDragAccept, acceptedFiles, rejectedFiles}) => (\n                        <section style={{ width: window.screen.width/2.6, height: window.screen.height - (window.screen.height/40)}}>\n                            <div {...getRootProps({onClick: event => event.stopPropagation()})}>\n                            <input {...getInputProps()} />\n                            {!isDragActive ? \n                                <div className={classes.defaultCardBorder}>\n                                <div className='Dropzone2'>\n                                    <AceEditor\n                                    value={getFirstDisplayText()}\n                                    mode=\"java\"\n                                    onChange={handleTextChange}\n                                    theme={props.eTheme}\n                                    width={(window.screen.width/2.6)}\n                                    height={window.screen.height - (window.screen.height/40)}\n                                    >\n                                    </AceEditor>\n                                </div>\n                                </div>:\n                                <div className={classes.dropCardBorder}>\n                                <div className='Dropzone2' style={{ width: window.screen.width/2.6, height: window.screen.height - (window.screen.height/40) }}>\n                                    <p></p>\n                                    <CloudUploadIcon className={classes.icon} fontSize='large'></CloudUploadIcon>\n                                    <p style={{ color: '#6493a1', whiteSpace: 'break-spaces' }}>Drop it here!</p>\n                                    <p></p>\n                                </div>\n                                </div>\n                            }\n                            </div>\n                        </section>\n                        )}\n                    </Dropzone>\n                    <span> </span>\n                    {getSecondDisplayText()}\n                </div>\n            </Paper>\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport './App.css';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport StepperPage from './components/StepperPage';\nimport ResourcesPage from './components/ResourcesPage';\nimport PageHeader from './components/PageHeader';\nimport MainInfoPage from './components/MainInfoPage';\nimport TutorialPage from './components/TutorialPage';\nimport EditorPage from './components/EditorPage';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\n\nconst CustomSwitch = withStyles({\n  switchBase: {\n    color: '#6493a1',\n    '&$checked': {\n      color: '#6493a1',\n    },\n    '&$checked + $track': {\n      backgroundColor: '#6493a1',\n    },\n  },\n  checked: {},\n  track: {},\n}) (Switch);\n\nconst HOME = 0;\nconst LIVE = 1;\nconst STATIC = 2;\nconst TUTORIAL = 3;\nconst RESOURCES = 4;\n\nfunction MainApp() {\n\n  const [backColor, setBackColor] = React.useState('#e3ecef');\n  const [textColor, setTextColor] = React.useState('#154854');\n  const [middleColor, setMiddleColor] = React.useState('#6493a1');\n  const [editorTheme, setEditorTheme] = React.useState(\"katzenmilch\");\n  const [mainColor, setMainColor] = React.useState('#FFFFFF');\n  const [tutorialColor, setTutorialColor] = React.useState('#FFFFFF');\n  const [logo, setLogo] = React.useState('LightLogo');\n  const [diffHighlight, setDiffHighlight] = React.useState('codeMarkerLight');\n  const [iconHighlight, setIconHighlight] = React.useState('#D3D3D3');\n  const [screenNum, setScreenNum] = React.useState(HOME);\n\n  const mainStyles = makeStyles((theme) => ({\n    root: {\n      marginLeft: theme.spacing(4),\n      color: textColor,\n      width: 600,\n    },\n    paper: {\n      margin: theme.spacing(3),\n      padding: theme.spacing(1),\n    },\n    text: {\n      fontFamily: 'Open-Sans',\n      color: '#7E7E7E',\n      margin: theme.spacing(3),\n      marginLeft: theme.spacing(window.screen.width/22),\n    },\n  }));\n\n  function changeScreen(sNum) {\n    setScreenNum(sNum);\n  }\n\n  const classes = mainStyles();\n  \n  function switchDark(isDarkMode) {\n    if (isDarkMode) {\n      setIconHighlight('#696969');\n      setBackColor('#444d56');\n      setTextColor('#e3ecef');\n      setMiddleColor('#e3ecef');\n      setMainColor('#16161d');\n      setTutorialColor('#282C35');\n      setLogo('DarkLogo');\n      setEditorTheme(\"nord_dark\");\n      setDiffHighlight('codeMarkerDark');\n    } else {\n      setIconHighlight('#D3D3D3');\n      setBackColor('#e3ecef');\n      setTextColor('#154854');\n      setMiddleColor('#6493a1');\n      setMainColor('#FFFFFF');\n      setTutorialColor('#FFFFFF');\n      setLogo('LightLogo');\n      setEditorTheme(\"katzenmilch\");\n      setDiffHighlight('codeMarkerLight');\n    }\n  }\n\n  function getScreen() {\n    switch(screenNum) {\n      case HOME:\n        return <MainInfoPage screenChangeCallback={changeScreen} tColor={textColor} logoStyle={logo} bColor={backColor} mColor={middleColor}></MainInfoPage>;\n      case LIVE:\n        return <EditorPage iColor={iconHighlight} screenChangeCallback={changeScreen} diffHighlight={diffHighlight} eTheme={editorTheme} hColor={mainColor} mColor={middleColor} tColor={textColor} bColor={backColor}></EditorPage>;\n      case STATIC:\n        return <StepperPage screenChangeCallback={changeScreen} mColor={middleColor} tColor={textColor} bColor={backColor}></StepperPage>;\n      case TUTORIAL:\n        return <TutorialPage screenChangeCallback={changeScreen} pColor={tutorialColor} mColor={middleColor} bColor={backColor} tColor={textColor}></TutorialPage>;\n      // case RESOURCES:\n      //   return <ResourcesPage screenChangeCallback={changeScreen} tColor={textColor} logoStyle={logo} bColor={backColor} mColor={middleColor}></ResourcesPage>;\n      default:\n        return <MainInfoPage screenChangeCallback={changeScreen} tColor={textColor} logoStyle={logo} bColor={backColor} mColor={middleColor}></MainInfoPage>;\n    }\n  }\n\n  return(\n    <div style={{ minHeight: window.screen.height, backgroundColor: mainColor}} className=\"App-body\">\n      <div style={{ backgroundColor: mainColor, whiteSpace: 'break-spaces'}} className='App-body'>\n        <PageHeader iColor={iconHighlight} currentScreen={screenNum} darkModeCallback={switchDark} screenChangeCallback={changeScreen} hColor={mainColor} mColor={middleColor} bColor={backColor} tColor={textColor}></PageHeader>\n        {getScreen()}\n      </div>\n      <Typography className={classes.text}>created by two fellow 61b'ers: pranati and khushi</Typography>\n    </div>\n  );\n}\n\n/**\n * The main App for ICEcap. The component consists of the\n * PageHeader, the MainInfoPage and the StepperPage.\n */\nclass App extends Component {\n\n  render() {\n    return (\n      <MainApp></MainApp>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}