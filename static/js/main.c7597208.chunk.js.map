{"version":3,"sources":["components/UploadButtons.js","components/Javadocs.js","components/FileDownloadComponent.js","components/SingleLines.js","components/MultiLines.js","components/Whitespaces.js","components/Indentations.js","components/StepperPage.js","components/ContactButton.js","components/PageHeader.js","components/MainInfoPage.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","input","display","button","backgroundColor","color","marginTop","marginRight","dropCard","width","height","paddingTop","paddingLeft","paddingRight","paddingBottom","dropCardBorder","border","borderColor","borderWidth","defaultCardBorder","listCard","padding","alignContent","icon","UploadButtons","props","classes","className","Card","elevation","onDrop","onFileDropped","accept","getRootProps","getInputProps","isDragActive","isDragReject","isDragAccept","acceptedFiles","rejectedFiles","style","fontSize","whiteSpace","id","multiple","type","htmlFor","Button","variant","component","disableElevation","onClick","document","getElementById","onchange","event","fileList","target","files","Javadocs","this","classJavadoc","methodPattern","RegExp","classPattern","inputFile","Promise","resolve","reader","FileReader","onloadend","result","readAsBinaryString","content","i","fileContent","javadocFound","lineNum","javadoc","lines","split","numLines","length","line","newline","lineTrim","trim","startsWith","endsWith","exec","validateJavadocComment","generateMethodJavadoc","header","javadocComment","returnVal","containsReturn","paramNames","getParamList","javadocLower","toLowerCase","includes","contains","toUpperCase","params","countParameters","indentation","countIndentations","indent","comment","open","indexOf","close","segments","substring","names","paramSplit","push","count","spaceCount","c","charAt","CssTextField","withStyles","TextField","React","useState","defaultFileName","currentFileName","setCurrentFileName","lineHeight","onChange","e","callbackFromParent","value","required","defaultValue","filename","text","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","contentList","fileIndex","SingleLines","commentIndex","subString","MultiLines","toWrite","openReached","closeReached","oneLine","replace","Whitespaces","Indentations","levels","lineToWrite","l","generateIndentation","elseIndentMark","isIndentMark","isEndIndentMark","mainStyles","window","screen","backButton","actionsContainer","marginBottom","resetContainer","step","StyledToggle","selected","label","ToggleButton","iconTheme","createMuiTheme","MuiStepIcon","active","disabled","VerticalLinearStepper","activeStep","setActiveStep","steps","operationOpen","setOperationOpen","fileOpen","setFileOpen","acceptedOpen","setAcceptedOpen","rejectedOpen","setRejectedOpen","javaSelected","setJava","singleSelected","setSingle","multiSelected","setMulti","indentSelected","setIndent","whiteSelected","setWhite","uploadedFiles","setUploadedFiles","fixedFileContents","setFixedFileContents","newFileNames","setNewFileNames","intialAcceptedFiles","setIntialAcceptedFiles","intialRejectedFiles","setIntialRejectedFiles","fileCallback","oldName","newName","map","handleButton","handleNext","handleRun","handleDownloadAll","prevActiveStep","handleBack","handleReset","fileAccessMethod","readAsText","java","single","multi","then","fileText","fixedText","addJavadocs","removeSingleLines","removeMultiLines","fixIndentations","performAll","JavadocToggle","SingleToggle","MultiToggle","WhitespaceToggle","IndentationToggle","onFileDrop","Array","from","nameList","file","name","stepThree","Typography","componentList","FileDownloadComponent","getFileDownloadComponents","getStepContent","Stepper","orientation","index","Step","key","ThemeProvider","StepLabel","StepContent","Collapse","in","Alert","list","fullString","getFileList","severity","timeout","Paper","square","StepperPage","flexGrow","title","appBarStyles","PageHeader","AppBar","position","Toolbar","href","mainText","flexWrap","fontWeight","fontFamily","marginLeft","subMainText","subText","MainInfoPage","scroll","scrollTo","App","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c7597208.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dropzone from 'react-dropzone';\nimport Card from '@material-ui/core/Card';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport './Component.css';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n  button: {\n    backgroundColor: '#6493a1',\n    color: 'white',\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    '&:hover': {\n      backgroundColor: '#537b86',\n    },\n  },\n  dropCard: {\n    width: '790px',\n    height: '160px',\n    paddingTop: '20px',\n    paddingLeft: '20px',\n    paddingRight: '15px',\n    paddingBottom: '15px',\n  },\n  dropCardBorder: {\n    border: 'dashed',\n    borderColor: '#6493a1',\n    borderWidth: '2px',\n    width: '780px',\n    height: '150px',\n  },\n  defaultCardBorder: {\n    border: 'dashed',\n    borderColor: '#D3D3D3',\n    borderWidth: '2px',\n    width: '780px',\n    height: '150px',\n  },\n  listCard: {\n    color: '#154854',\n    width: '200px',\n    backgroundColor: 'white',\n    padding: '10px',\n    alignContent: 'center',\n  },\n  icon: {\n    color: '#6493a1'\n  }\n}));\n\nexport default function UploadButtons(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Card elevation={0} className={classes.dropCard}>\n        <Dropzone className={classes.dropCard} onDrop={props.onFileDropped} accept='.java'>\n          {({getRootProps, getInputProps, isDragActive, isDragReject, isDragAccept, acceptedFiles, rejectedFiles}) => (\n            <section style={{ width: 150, height: 780 }}>\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                {!isDragActive ? \n                  <div className={classes.defaultCardBorder}>\n                    <div className='Dropzone'>\n                    <p></p>\n                    <CloudUploadIcon className={classes.icon} fontSize='large'></CloudUploadIcon>\n                    <p style={{ color: '#6493a1', whiteSpace: 'break-spaces' }}>Choose a file or drop it here</p>\n                    <p></p>\n                    </div>\n                  </div>:\n                  <div className={classes.dropCardBorder}>\n                    <div className='Dropzone'>\n                    <p></p>\n                    <CloudUploadIcon className={classes.icon} fontSize='large'></CloudUploadIcon>\n                    <p style={{ color: '#6493a1', whiteSpace: 'break-spaces' }}>Drop it here!</p>\n                    <p></p>\n                    </div>\n                  </div>\n                }\n              </div>\n            </section>\n          )}\n        </Dropzone>\n      </Card>\n      <p>\n\n      </p>\n      <div>\n      <input\n        accept=\".java\"\n        className={classes.input}\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button \n        variant=\"contained\" \n        component=\"span\"\n        className={classes.button}\n        disableElevation\n        onClick={() => {\n          document.getElementById('contained-button-file').onchange = function(event) {\n            var fileList = event.target.files;\n            props.onFileDropped(fileList, []);\n         }\n        }}\n        >\n          Upload Files\n        </Button>\n      </label>\n    </div>\n    </div>\n  );\n}\n","export default class Javadocs {\n\n    constructor() {\n        this.classJavadoc =\n            \"/**\\n\" + \n            \" * \\n\" + \n            \" * @author\\n\" + \n            \" */\\n\";\n        this.methodPattern = new RegExp(\n            \"(\\\\p{Space})*(public |protected |private )?\" +\n            \"(static )?\" +\n            \"(void |[\\\\w\\\\W]+ )\" +\n            \"([a-zA-Z0-9]+)\" +\n            \"\\\\(\" +\n            \"(([\\\\w\\\\W]+ [a-zA-Z0-9]+)|\" +\n            \"(([\\\\w\\\\W]+ [a-zA-Z0-9]+, )+[\\\\w\\\\W]+ [a-zA-Z0-9]+))?\" + \n            \"\\\\) ?\\\\{\");\n        this.classPattern = new RegExp(\n            \"(\\\\p{Space})*(public |protected |private )?\" +\n            \"(static )?\" + \n            \"(class )\" +\n            \"(extends |implements )?\" +\n            \"([a-zA-Z0-9]+) ?\\\\{\"\n        );\n\n    }\n\n    javadocMethod(inputFile){\n        return new Promise(\n        function(resolve) {\n        var reader = new FileReader();\n        reader.onloadend = (function(reader)\n        {\n            return function() {\n            resolve(reader.result);\n            }\n        })(reader);\n        reader.readAsBinaryString(inputFile);\n        });\n    }\n\n    addJavadocs(content) {\n        var fileContent = \"\";\n        var javadocFound = false;\n        var lineNum = 1;\n        var javadoc = \"\";\n        var lines = content.split(\"\\n\");\n        var numLines = lines.length;\n        var i;\n        for (i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var newline = \"\";\n            if (lineNum < numLines) {\n                newline = \"\\n\";\n            }\n            var lineTrim = line.trim();\n            if (!lineTrim.startsWith(\"/**\") && lineTrim.startsWith(\"/*\")) {\n                fileContent += line + newline;\n            } else if (lineTrim.startsWith(\"/**\") && lineTrim.endsWith(\"*/\")) {\n                javadocFound = false;\n                javadoc += line + newline;\n            } else if (lineTrim.startsWith(\"/**\")) {\n                javadocFound = true;\n                javadoc += line + newline;\n            } else if (lineTrim.endsWith(\"*/\")) {\n                if (javadocFound) {\n                    javadocFound = false;\n                    javadoc += line + newline;\n                } else {\n                    fileContent += line + newline;\n                }\n            } else if (javadocFound) {\n                javadoc += line + newline;\n            } else if (line === \"\" || lineTrim === \"\") {\n                fileContent += line + newline;\n            } else if (this.methodPattern.exec(lineTrim)) {\n                if (javadoc !== \"\") {\n                    if (this.validateJavadocComment(line, javadoc)) {\n                        fileContent += javadoc;\n                    } else {\n                        fileContent += \"------- INCORRECT JAVADOC FORMAT -------\\n\";\n                        fileContent += javadoc;\n                        fileContent += \"----------------------------------------\\n\";\n                    }\n                    fileContent += line + newline;\n                    javadoc = \"\";\n                } else {\n                    var comment = this.generateMethodJavadoc(line);\n                    fileContent += comment;\n                    fileContent += line + newline;\n                }\n            } else if (this.classPattern.exec(line)) {\n                if (javadoc !== \"\") {\n                    fileContent += javadoc;\n                    fileContent += line + newline;\n                    javadoc = \"\";\n                } else {\n                    fileContent += this.classJavadoc;\n                    fileContent += line + newline;\n                }\n            } else {\n                if (javadoc !== \"\") {\n                    fileContent += javadoc + newline;\n                }\n                fileContent += line + newline;\n                javadoc = \"\";\n            }\n            lineNum++;\n        }\n        return fileContent;\n    }\n\n    validateJavadocComment(header, javadocComment) {\n        var returnVal = this.containsReturn(header);\n        var paramNames = this.getParamList(header);\n        var javadocLower = javadocComment.toLowerCase();\n        if (returnVal) {\n            if (!(javadocLower.includes(\"@return\") || javadocLower.includes(\"returns\")\n                || javadocLower.includes(\"returning\") || javadocLower.includes(\"return\"))) {\n                return false;\n            }\n        }\n        var i;\n        for (i = 0; i < paramNames; i++) {\n            if (!(javadocComment.contains(\"@param \" + paramNames[i]) || javadocComment.contains(paramNames[i].toUpperCase()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    generateMethodJavadoc(header) {\n        var params = this.countParameters(header);\n        var returnVal = this.containsReturn(header);\n        var indentation = this.countIndentations(header);\n        var paramNames = this.getParamList(header);\n        var indent = \"\";\n        var i;\n        for (i = 0; i < indentation; i++) {\n            indent += \"\\t\";\n        }\n        var comment = indent + \"/**\\n\" + indent + \" *\\n\";\n        for (i = 0; i < params; i++) {\n            comment = comment + indent + \" * @param \" + paramNames[i] + \"\\n\";\n        }\n        if (returnVal) {\n            comment = comment + indent + \" * @return\\n\";\n        }\n        comment = comment + indent + \" */\\n\";\n        return comment;\n    }\n\n    countParameters(header) {\n        return this.getParamList(header).length;\n    }\n\n    getParamList(header) {\n        var open = header.indexOf('(');\n        var close = header.indexOf(')');\n        var paramString = header.substring(open + 1, close);\n        var segments = paramString.split(\",\");\n        var names = [];\n        var i;\n        for (i in segments) {\n            var paramSplit = segments[i].split(\" \");\n            names.push(paramSplit[paramSplit.length - 1]);\n        }\n        return names;\n    }\n\n    containsReturn(header) {\n        return !header.includes(\"void\");\n    }\n\n    countIndentations(header) {\n        var count = 0;\n        var spaceCount = 0;\n        var i = 0;\n        for (i = 0; i < header.length; i++) {\n            var c = header.charAt(i);\n            if (c !== '\\t' && c !== ' ') {\n                break;\n            }\n            if (c === '\\t') {\n                count += 1;\n            }\n            if (c === ' ') {\n                spaceCount++;\n            }\n        }\n        return count + (spaceCount / 4);\n    }\n}\n","import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst CssTextField = withStyles({\n    root: {\n        '& .MuiOutlinedInput-root': {\n            '&.Mui-focused fieldset': {\n                borderColor: '#6493a1',\n            },\n            color: '#6493a1',\n        },\n    },\n}) (TextField);\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        backgroundColor: '#6493a1',\n        '&:hover': {\n          backgroundColor: '#537b86',\n        },\n        color: 'white',\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport default function(props) {\n\n    const classes = useStyles();\n    const [currentFileName, setCurrentFileName] = React.useState(props.defaultFileName);\n\n    function handleChange(e) {\n        props.callbackFromParent(currentFileName, e.target.value);\n        setCurrentFileName(e.target.value);\n    }\n\n    function download(filename, text) {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:.java;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n      \n        element.style.display = 'none';\n        document.body.appendChild(element);\n      \n        element.click();\n      \n        document.body.removeChild(element);\n    }\n\n    function doDownload() {\n        download(currentFileName, props.contentList[props.fileIndex]);    \n    }\n\n    return (\n        <div className='DownloadTextField' style={{ whiteSpace: 'break-spaces', lineHeight: 4.5 }}>\n            <CssTextField \n            onChange={handleChange}\n            required\n            id=\"outlined-required\"\n            defaultValue={props.defaultFileName}\n            variant=\"outlined\">\n            </CssTextField>\n            <span>        </span> \n            <Button\n            onClick={doDownload}\n            variant='contained'\n            className={classes.button}\n            disableElevation\n            >\n                Download File\n            </Button>\n        </div>\n    );\n}","export default class SingleLines {\n    \n    constructor() {\n    }\n\n    singleLineMethod(inputFile) {\n        return new Promise(\n        function(resolve) {\n            var reader = new FileReader();\n            reader.onloadend = (function(reader)\n            {\n            return function() {\n                resolve(reader.result);\n            }\n            })(reader);\n            reader.readAsBinaryString(inputFile);\n        });\n    }\n\n    removeSingleLines(content) {\n        var fileContent = \"\";\n        var lines = content.split(\"\\n\");\n        var numLines = lines.length;\n        var lineNum = 1;\n        var i;\n        for (i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var newline = \"\";\n            if (lineNum < numLines) {\n                newline = \"\\n\";\n            } else {\n                newline = \"\";\n            }\n            if (line.includes(\"//\")) {\n                var commentIndex = line.indexOf(\"//\", 0);\n                if (commentIndex !== 0) {\n                var subString = line.substring(0, commentIndex);\n                if (subString.trim() === \"\") {\n                    fileContent += subString + newline;\n                }\n                }\n            } else {\n                fileContent += line + newline;\n            }\n            lineNum++;\n        }\n        return fileContent;\n    }\n}\n","export default class MultiLines {\n\n    constructor() {\n    }\n\n    multiLineMethod(inputFile) {\n        return new Promise(\n        function(resolve) {\n            var reader = new FileReader();\n            reader.onloadend = (function(reader)\n            {\n            return function() {\n                resolve(reader.result);\n            }\n            })(reader);\n            reader.readAsBinaryString(inputFile);\n        });\n    }\n\n    removeMultiLines(content) {\n        var fileContent = \"\";\n        var lines = content.split(\"\\n\");\n        var numLines = lines.length;\n        var lineNum = 1;\n        var i;\n        var toWrite = \"\";\n        var openReached = false;\n        var closeReached = false;\n        var oneLine = false;\n        for (i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var newline = \"\";\n            if (lineNum < numLines) {\n                newline = \"\\n\";\n            } else {\n                newline = \"\";\n            }\n            if (line.includes(\"/*\") && line.includes(\"*/\")) {\n                if (line.indexOf(\"/**\") !== line.indexOf(\"/*\")) {\n                    openReached = false;\n                    closeReached = false;\n                    oneLine = true;\n                }\n            } else if (line.includes(\"/*\")) {\n                if (line.indexOf(\"/**\") !== line.indexOf(\"/*\")) {\n                    openReached = true;\n                    closeReached = false;\n                }\n            } else if (line.includes(\"*/\")) {\n                if (openReached) {\n                    openReached = false;\n                    closeReached = true;\n                }\n            }\n            toWrite = line;\n            var open = toWrite.indexOf(\"/*\");\n            var close = toWrite.indexOf(\"*/\") + 2;\n            if (oneLine) {\n                toWrite = line.replace(line.substring(open, close), \"\");\n            } else if (openReached && !closeReached) {\n                toWrite = \"\";\n            } else if (closeReached) {\n                toWrite = line.substring(close);\n                openReached = false;\n                closeReached = false;\n            }\n            oneLine = false;\n            fileContent += toWrite + newline;\n        }\n        return fileContent;\n    }\n}","export default class Whitespaces {\n\n    constructor() {\n\n    }\n\n\n}","export default class Indentations {\n    \n    constructor() {\n    }\n\n    fixIndentations(content) {\n        var fileContent = \"\";\n        var levels = 0;\n        var lineToWrite = \"\";\n        var newline = \"\";\n        var lineNum = 1;\n        var lines = content.split(\"\\n\");\n        var numLines = lines.length;\n        var comment = false;\n        var i;\n        for (i = 0; i < lines.length; i++) {\n            var l = lines[i];\n            if (lineNum < numLines) {\n                newline = \"\\n\";\n            } else {\n                newline = \"\";\n            }\n            if (l.trim() === \"\") {\n                lineToWrite = l + newline;\n            } else {\n                var line = l.trim();\n                if (line.indexOf('//') === 0) {\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                } else if (line.endsWith(\"*/\")) {\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                    comment = false;\n                } else if (line.startsWith(\"/**\") || line.startsWith(\"/*\")) {\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                    comment = true;\n                } else if (!comment && this.elseIndentMark(line)) {\n                    levels -= 1;\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                    levels += 1;\n                } else if (!comment && this.isIndentMark(line)) {\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                    levels += 1;\n                } else if (!comment && this.isEndIndentMark(line)) {\n                    levels -= 1;\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                } else {\n                    lineToWrite = this.generateIndentation(levels) + line + newline;\n                }\n            }\n            fileContent += lineToWrite;\n            lineNum += 1;\n        }\n        return fileContent;\n    }\n\n    isIndentMark(line) {\n        if (line.trim().endsWith(\"{\")) {\n            return true;\n        } else if (line.includes(\"//\")) {\n            var subLine = line.substring(0, line.indexOf(\"//\"));\n            if (subLine.trim().endsWith(\"{\")) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isEndIndentMark(line) {\n        if (line.trim() === \"}\" || line.trim() === \"};\") {\n            return true;\n        }\n        return false;\n    }\n\n    elseIndentMark(line) {\n        if (line.includes(\"}\")) {\n            if (line.includes(\"else\") && (line.indexOf(\"}\") < line.indexOf(\"else\"))) {\n                return true;\n            }\n            if (line.includes(\"else if\") && (line.indexOf(\"}\") < line.indexOf(\"else if\"))) {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    generateIndentation(levels) {\n        var indent = \"\";\n        var i;\n        for (i = 0; i < levels; i++) {\n            indent += \"    \";\n        }\n        return indent;\n    }\n}","import Paper from '@material-ui/core/Paper';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport StepContent from '@material-ui/core/StepContent';\nimport UploadButtons from './UploadButtons';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport SpaceBarIcon from '@material-ui/icons/SpaceBar';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport FormatIndentIncreaseIcon from '@material-ui/icons/FormatIndentIncrease';\nimport CodeIcon from '@material-ui/icons/Code';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport Alert from '@material-ui/lab/Alert';\nimport Collapse from '@material-ui/core/Collapse';\nimport './Component.css';\nimport Javadocs from './Javadocs'; \nimport FileDownloadComponent from './FileDownloadComponent';\nimport SingleLines from './SingleLines';\nimport MultiLines from './MultiLines';\nimport Whitespaces from './Whitespaces';\nimport Indentations from './Indentations';\n\nconst mainStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(7),\n        width: theme.spacing(window.screen.width),\n        height: theme.spacing(window.screen.height),\n      },\n    },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        color: '#6493a1',\n        width: '70%',\n        height: '100%',\n        margin: 30,\n    },\n    button: {\n        backgroundColor: '#6493a1',\n        '&:hover': {\n          backgroundColor: '#537b86',\n        },\n        color: 'white',\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    backButton: {\n        color: '#154854',\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n        backgroundColor: '#e3ecef'\n    },\n    step: {\n        color: '#154854',\n    },\n}));\n\nconst StyledToggle = withStyles({\n  root: {\n    color: '#white',\n    borderColor: '#white',\n    whiteSpace: 'break-spaces',\n    '&:hover': {\n      borderColor: '#6493a1',\n    },\n  },\n  selected: {\n    '&:active': {\n      backgroundColor: '#5c8794',\n    },\n    backgroundColor: '#bcf5bc',\n    color: '#154854',\n    borderColor: '#154854',\n    label: '#154854'\n  },\n  label: {\n    '&:active': {\n      color: '#154854',\n    },\n    '&:hover': {\n      color: '#6493a1',\n    },\n  }\n})(ToggleButton);\n  \nfunction getSteps() {\n  return ['Choose a file', 'Choose operations', 'Download your file'];\n}\n\nconst iconTheme = createMuiTheme({\n    props: {\n        MuiStepIcon: {\n            root: {\n                color: '#6493a1',\n            },\n            active: {\n                color: '#6493a1',\n            },\n            disabled: {\n              color: 'white',\n            }\n        },\n    },\n});\n\nfunction VerticalLinearStepper() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    const [operationOpen, setOperationOpen] = React.useState(false);\n    const [fileOpen, setFileOpen] = React.useState(false);\n    const [acceptedOpen, setAcceptedOpen] = React.useState(false);\n    const [rejectedOpen, setRejectedOpen] = React.useState(false);\n\n    const [javaSelected, setJava] = React.useState(false);\n    const [singleSelected, setSingle] = React.useState(false);\n    const [multiSelected, setMulti] = React.useState(false);\n    const [indentSelected, setIndent] = React.useState(false);\n    const [whiteSelected, setWhite] = React.useState(false);\n    const [uploadedFiles, setUploadedFiles] = React.useState({});\n    const [fixedFileContents, setFixedFileContents] = React.useState({});\n    const [newFileNames, setNewFileNames] = React.useState([]);\n    const [intialAcceptedFiles, setIntialAcceptedFiles] = React.useState([]);\n    const [intialRejectedFiles, setIntialRejectedFiles] = React.useState([]);\n\n    function fileCallback(oldName, newName) {\n      setNewFileNames(newFileNames.map(function(filename){return (filename === oldName ? newName : filename)}));\n    }\n\n    const handleButton = () => {\n      if (activeStep === 0) {\n        handleNext();\n      } else if (activeStep === 1) {\n        handleRun();\n      } else {\n        handleDownloadAll();\n      }\n    }\n  \n    const handleNext = () => {\n      if (activeStep === 0) {\n        if (uploadedFiles.length > 0) {\n          setFileOpen(false);\n          setAcceptedOpen(false);\n          setRejectedOpen(false);\n          setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        } else {\n          setFileOpen(true);\n        }\n      }\n    };\n  \n    const handleBack = () => {\n        if (activeStep === 1) {\n          setJava(false);\n          setSingle(false);\n          setMulti(false);\n          setWhite(false);\n          setIndent(false);\n          if (operationOpen) {\n              setOperationOpen(false);\n          }\n          setAcceptedOpen(true);\n          if (intialRejectedFiles.length <= 0) {\n            setRejectedOpen(false);\n          } else {\n            setRejectedOpen(true);\n          }\n          setActiveStep((prevActiveStep) => prevActiveStep - 1);\n        } else if (activeStep === 2) {\n          handleReset();\n        } else {\n          setActiveStep((prevActiveStep) => prevActiveStep - 1);\n        }\n    };\n\n    function fileAccessMethod(inputFile){\n      return new Promise(\n      function(resolve) {\n      var reader = new FileReader();\n      reader.onloadend = (function(reader)\n      {\n          return function() {\n          resolve(reader.result);\n          }\n      })(reader);\n      reader.readAsText(inputFile);\n      });\n    }\n\n    function performAll() {\n      const java = new Javadocs();\n      const single = new SingleLines();\n      const multi = new MultiLines();\n      const white = new Whitespaces();\n      const indent = new Indentations();\n      var i;\n      var contentList = [];\n      for (i = 0; i < uploadedFiles.length; i++) {\n        var inputFile = uploadedFiles[i];\n        fileAccessMethod(inputFile).then(function(fileText) {\n          var fixedText = fileText;\n          if (javaSelected) {\n            fixedText = java.addJavadocs(fixedText);\n          }\n          if (singleSelected) {\n            fixedText = single.removeSingleLines(fixedText);\n          }\n          if (multiSelected) {\n            fixedText = multi.removeMultiLines(fixedText);\n          }\n          if (whiteSelected) {\n          }\n          if (indentSelected) {\n            fixedText = indent.fixIndentations(fixedText);\n          }\n          contentList.push(fixedText);\n        });\n      }\n      setFixedFileContents(contentList);\n    }\n\n    const handleRun = () => {\n      if (activeStep === 1) {\n        if (!javaSelected && !singleSelected && !multiSelected && !whiteSelected && !indentSelected) {\n            setOperationOpen(true);\n        } else {\n            setOperationOpen(false);\n            performAll();\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n      }\n    }\n\n    const handleDownloadAll = () => {\n      var i;\n      for (i = 0; i < newFileNames.length; i++) {\n        var newFileName = newFileNames[i];\n        var content = fixedFileContents[i];\n        download(newFileName, content);\n      }\n    }\n\n    function download(filename, text) {\n      var element = document.createElement('a');\n      element.setAttribute('href', 'data:.java;charset=utf-8,' + encodeURIComponent(text));\n      element.setAttribute('download', filename);\n    \n      element.style.display = 'none';\n      document.body.appendChild(element);\n    \n      element.click();\n    \n      document.body.removeChild(element);\n    }\n  \n    const handleReset = () => {\n      setJava(false);\n      setSingle(false);\n      setMulti(false);\n      setWhite(false);\n      setIndent(false);\n      if (operationOpen) {\n        setOperationOpen(false);\n      }\n      if (fileOpen) {\n        setFileOpen(false);\n      }\n      if (acceptedOpen) {\n        setAcceptedOpen(false);\n      }\n      if (rejectedOpen) {\n        setRejectedOpen(false);\n      }\n      setUploadedFiles({});\n      setIntialRejectedFiles([]);\n      setIntialAcceptedFiles([]);\n      setFixedFileContents({});\n      setNewFileNames([]);\n      setActiveStep(0);\n    };\n\n    function JavadocToggle() {\n        return (\n          <StyledToggle value=\"javadoc\" selected={javaSelected} onChange={() => {setJava(!javaSelected);}}>\n              <CodeIcon />  Add Javadocs\n          </StyledToggle>\n        );\n    }\n\n    function SingleToggle() {\n        return (\n            <StyledToggle value=\"single\" selected={singleSelected} onChange={() => {setSingle(!singleSelected);}}>\n                <SubjectIcon /> Remove // Comments\n            </StyledToggle>\n        );\n    }\n\n    function MultiToggle() {\n        return(\n            <StyledToggle value=\"multi\" selected={multiSelected} onChange={() => {setMulti(!multiSelected);}}>\n                <SubjectIcon /> Remove /* Comments\n            </StyledToggle>\n        );\n    }\n\n    function WhitespaceToggle() {\n        return(\n          <StyledToggle value=\"whitespace\" selected={whiteSelected} onChange={() => {setWhite(!whiteSelected);}}>\n              <SpaceBarIcon /> Fix Whitespaces\n          </StyledToggle>\n        );\n    }\n\n    function IndentationToggle() {\n        return (\n          <StyledToggle value=\"indent\" selected={indentSelected} onChange={() => {setIndent(!indentSelected);}}>\n              <FormatIndentIncreaseIcon /> Fix Indentations\n          </StyledToggle>\n        );\n    }\n\n    function onFileDrop(acceptedFiles, rejectedFiles) {\n      acceptedFiles = Array.from(acceptedFiles);\n      rejectedFiles = Array.from(rejectedFiles);\n      setIntialAcceptedFiles(acceptedFiles);\n      setIntialRejectedFiles(rejectedFiles);\n      if (acceptedFiles.length <= 0) {\n        setAcceptedOpen(false);\n      } else {\n        setAcceptedOpen(true);\n      }\n      if (rejectedFiles.length <= 0) {\n        setRejectedOpen(false);\n      } else {\n        setRejectedOpen(true);\n      }\n      setUploadedFiles(acceptedFiles);\n      var nameList = acceptedFiles.map(function(file){return file.name});\n      setNewFileNames(nameList);\n      if (acceptedFiles.length > 0) {\n        setFileOpen(false);\n      }\n    }\n\n    function getFileList(list) {\n      var fullString = \"\";\n      var i;\n      for (i = 0; i < list.length; i++) {\n        fullString += list[i].name + \", \";\n      }\n      fullString = fullString.substring(0, fullString.length - 2);\n      return fullString;\n    }\n  \n    function getRejectFileList(num) {\n      var fullString = \"\";\n      return fullString + num + \" file was not uploaded due to incorrect format\";\n    }\n\n    function stepOne() {\n      return (\n        <Typography>\n            Upload files (.java file) for which you would like the program to clear style check errors:\n            <p></p>\n            <UploadButtons onFileDropped={onFileDrop}></UploadButtons>\n            <p></p>\n        </Typography>\n      );\n    }\n\n    function stepTwo() {\n        return (\n          <Typography>\n              <p> Chooose the operations you want to perform on the .java files. The software will only apply\n                 the selected operations on the contents of the .java files and you can download the fixed version\n                 in the next step:\n              </p>\n              <div style={{ whiteSpace: 'break-spaces', lineHeight: 4.5 }}>\n                  <p></p>\n                  <JavadocToggle></JavadocToggle><span>    </span><SingleToggle><span>    </span></SingleToggle><span>    </span><MultiToggle></MultiToggle><span>    </span><WhitespaceToggle></WhitespaceToggle><span>    </span><IndentationToggle></IndentationToggle>\n                  <p></p>\n              </div>\n          </Typography>\n        );\n    }\n\n    function getFileDownloadComponents() {\n      var i;\n      var componentList = [];\n      for (i = 0; i < newFileNames.length; i++) {\n        var name = newFileNames[i];\n        componentList.push(\n          <div>\n          <FileDownloadComponent callbackFromParent={fileCallback} defaultFileName={name} contentList={fixedFileContents} fileIndex={i}></FileDownloadComponent>\n          </div>\n        );\n      }\n      return componentList;\n    }\n    \n    function stepThree() {\n      return (\n        <Typography>\n          Enter a name for each file and download the files below. If you don't provide a name we will use the original file name\n          to download your file.\n          <p></p>\n          {getFileDownloadComponents()}\n          <p></p>\n        </Typography>\n      );\n    }\n\n    function getStepContent(step) {\n        switch (step) {\n          case 0:\n              return stepOne();\n          case 1:\n              return stepTwo();\n          case 2:\n              return stepThree();\n          default:\n              return 'Unknown step';\n        }\n    }\n\n    return (\n      <div className={classes.root}>\n        <Stepper activeStep={activeStep} orientation=\"vertical\" style={{ backgroundColor: '#e3ecef'}}>\n          {steps.map((label, index) => (\n            <Step key={label} className={classes.step}>\n                <ThemeProvider theme={iconTheme}>\n                    <StepLabel>\n                        <Typography className='Step-header'>\n                            {label}\n                        </Typography>\n                    </StepLabel>\n                </ThemeProvider>\n              <StepContent>\n                <Typography>{getStepContent(index)}</Typography>\n                <Collapse in={acceptedOpen}>\n                  <p></p>\n                  <Alert width='100px'>{getFileList(intialAcceptedFiles)}</Alert>\n                  <p></p>\n                </Collapse>\n                <Collapse in={rejectedOpen}>\n                  <p></p>\n                  <Alert width='100px' severity=\"error\">{getRejectFileList(intialRejectedFiles.length)}</Alert>\n                  <p></p>\n                </Collapse>\n                <Collapse in={fileOpen} timeout='auto'> \n                    <p></p>\n                    <Alert severity=\"error\">Please upload at least one file</Alert>\n                    <p></p>\n                </Collapse>\n                <Collapse in={operationOpen} timeout='auto'> \n                    <p></p>\n                    <Alert severity=\"error\">Please select at least one operation</Alert>\n                    <p></p>\n                </Collapse>\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.backButton}\n                    >\n                      {activeStep === 2 && 'Reset'}\n                      {activeStep < 2 && 'Back'}\n                    </Button>\n                    <Button\n                      onClick={handleButton}\n                      className={classes.button}\n                      disableElevation\n                      variant='contained'\n                    >\n                      {activeStep === 0 && 'Next'}\n                      {activeStep === 1 && 'Run'}\n                      {activeStep === 2 && 'Download All Files'}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n        {activeStep === steps.length && (\n          <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography>All steps completed - you&apos;re finished</Typography>\n            <Button onClick={handleReset} className={classes.button} variant='contained' disableElevation>\n              Reset\n            </Button>\n          </Paper>\n        )}\n      </div>\n    );\n  }\n\nexport default function StepperPage() {\n    const classes = mainStyles();\n  \n    return(\n      <div className={classes.root}>\n        <Paper elevation={0} style={{ backgroundColor: '#e3ecef', height: 6*window.screen.height/7, width: window.screen.width}}>\n            <VerticalLinearStepper>\n            </VerticalLinearStepper>\n        </Paper>\n      </div>\n    );\n  \n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst appBarStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n      color: '#6493a1',\n    },\n    button: {\n      color: '#6493a1',\n      borderColor: '#6493a1',\n    }\n  }));\n\nexport default function ContactButton() {\n    const classes = appBarStyles();\n  \n    const [open, setOpen] = React.useState(false);\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    return (\n      <div>\n        <Button variant=\"outlined\" className={classes.button} onClick={handleClickOpen}>\n          Contact Us\n        </Button>\n        <Dialog\n          open={open}\n          keepMounted\n          disableBackdropClick\n          disableEscapeKeyDown\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">{\"Contact Us\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              Let us know if you had issues using ICEcap, if you have suggestions or feedback, or if you would \n              like to get in touch!\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} className={classes.button}>\n              Cancel\n            </Button>\n            <Button onClick={handleClose} className={classes.button}>\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }","import React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ContactButton from './ContactButton';\nimport './Component.css';\n\nconst appBarStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n      color: '#6493a1',\n    },\n    button: {\n      color: '#6493a1',\n    }\n  }));\n  \nexport default function PageHeader() {\n    const classes = appBarStyles();\n    return (\n        <div className={classes.root}>\n        <AppBar elevation={0} position=\"static\" color='inherit'>\n            <Toolbar>\n            <Typography variant=\"App-header\" className={classes.title}>\n                ICEcΔp v1.0\n            </Typography>\n            <Button className={classes.button} variant=\"App-header\" target=\"_blank\" href=\"https://docs.google.com/forms/d/1A8qwG5T8pZIKmCaPYYSiEoqgzKsWMKBYmpUAqJ4zWw0/prefill\" color=\"inherit\">contact us</Button>\n            {/* <ContactButton></ContactButton> */}\n            </Toolbar>\n        </AppBar>\n        </div>\n    );\n  }","import React from 'react';\nimport './Component.css';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { animateScroll as scroll } from \"react-scroll\";\n\nconst mainStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(7),\n        width: theme.spacing(window.screen.width),\n        height: theme.spacing(window.screen.height),\n      },\n    },\n    mainText: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      color: 'white',\n      fontWeight: 600,\n      fontSize: '150px',\n      fontFamily: 'Open-Sans',\n      marginLeft: theme.spacing(10),\n      marginTop: theme.spacing(10),\n      marginRight: theme.spacing(1),\n    },\n    subMainText: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      color: 'white',\n      fontSize: '35px',\n      fontWeight: 600,\n      fontFamily: 'Open-Sans',\n      marginLeft: theme.spacing(11),\n      marginRight: theme.spacing(1),\n    },\n    subText: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      color: 'white',\n      fontSize: '18px',\n      fontWeight: 600,\n      fontFamily: 'Open-Sans',\n      marginLeft: theme.spacing(11),\n      marginTop: theme.spacing(2),\n      marginRight: theme.spacing(8),\n    },\n    button: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      backgroundColor: 'white',\n      color: '#154854',\n      marginTop: theme.spacing(5),\n      marginRight: theme.spacing(1),\n      marginLeft: theme.spacing(11),\n    },\n  }));\n  \nexport default function MainInfoPage() {\n  const classes = mainStyles();\n  const scrollToTop = () => {\n    scroll.scrollTo(6*window.screen.height/7);\n  };\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} className='Logo' style={{ height: 2*window.screen.height/3, width: window.screen.width }}>\n        <div>  \n          <Typography className={classes.mainText}>ICEcΔp</Typography>\n          <Typography className={classes.subMainText}>\n            (Interactive Convention Editor)\n          </Typography>\n          <Typography className={classes.subText}>\n            We all have faced issues with the 200+ style check errors that appear right when we are ready to submit our CS 61B\n            projects. In three easy steps below, you can get rid of many style check errors from your project.\n          </Typography>\n            <Button\n                className={classes.button}\n                disableElevation\n                variant='contained'\n                onClick={scrollToTop}\n              >\n                Start\n            </Button>\n        </div>\n      </Paper>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport './App.css';\nimport StepperPage from './components/StepperPage';\nimport PageHeader from './components/PageHeader';\nimport MainInfoPage from './components/MainInfoPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App-body'>\n          <PageHeader></PageHeader>\n          <MainInfoPage></MainInfoPage>\n          <StepperPage></StepperPage>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}